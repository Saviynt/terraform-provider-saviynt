/*
Dynamic Attribute Management API

Use this API to manage dynamic attributes in Saviynt Identity Cloud.  The Authorization header must have \"Bearer {token}\".

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dynamicattributes

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// CreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes - If present, either:   • a string (e.g. \"attributenames [sample] does not exist\"), or     • an object of sub‐field errors (e.g. `{ \"attributetype\": \"not valid\" }`) 
type CreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes struct {
	MapmapOfStringmapmapOfStringAny *map[string]map[string]interface{}
	String *string
}

// map[string]map[string]interface{}AsCreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes is a convenience function that returns map[string]map[string]interface{} wrapped in CreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes
func MapmapOfStringmapmapOfStringAnyAsCreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes(v *map[string]map[string]interface{}) CreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes {
	return CreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes{
		MapmapOfStringmapmapOfStringAny: v,
	}
}

// stringAsCreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes is a convenience function that returns string wrapped in CreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes
func StringAsCreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes(v *string) CreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes {
	return CreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes{
		String: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into MapmapOfStringmapmapOfStringAny
	err = newStrictDecoder(data).Decode(&dst.MapmapOfStringmapmapOfStringAny)
	if err == nil {
		jsonMapmapOfStringmapmapOfStringAny, _ := json.Marshal(dst.MapmapOfStringmapmapOfStringAny)
		if string(jsonMapmapOfStringmapmapOfStringAny) == "{}" { // empty struct
			dst.MapmapOfStringmapmapOfStringAny = nil
		} else {
			if err = validator.Validate(dst.MapmapOfStringmapmapOfStringAny); err != nil {
				dst.MapmapOfStringmapmapOfStringAny = nil
			} else {
				match++
			}
		}
	} else {
		dst.MapmapOfStringmapmapOfStringAny = nil
	}

	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			if err = validator.Validate(dst.String); err != nil {
				dst.String = nil
			} else {
				match++
			}
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.MapmapOfStringmapmapOfStringAny = nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes) MarshalJSON() ([]byte, error) {
	if src.MapmapOfStringmapmapOfStringAny != nil {
		return json.Marshal(&src.MapmapOfStringmapmapOfStringAny)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.MapmapOfStringmapmapOfStringAny != nil {
		return obj.MapmapOfStringmapmapOfStringAny
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj CreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes) GetActualInstanceValue() (interface{}) {
	if obj.MapmapOfStringmapmapOfStringAny != nil {
		return *obj.MapmapOfStringmapmapOfStringAny
	}

	if obj.String != nil {
		return *obj.String
	}

	// all schemas are nil
	return nil
}

type NullableCreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes struct {
	value *CreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes
	isSet bool
}

func (v NullableCreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes) Get() *CreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes {
	return v.value
}

func (v *NullableCreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes) Set(val *CreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes(val *CreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes) *NullableCreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes {
	return &NullableCreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes{value: val, isSet: true}
}

func (v NullableCreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateOrDeleteDynamicAttributeResponseDynamicattributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


