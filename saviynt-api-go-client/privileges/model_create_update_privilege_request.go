/*
Privilege Management API

API for managing privileges in Saviynt/SSM. - **Create Privilege**: Creates a new privilege. - **Update Privilege**: Updates an existing privilege. - **Get Privilege List**: Returns a list of privileges based on search criteria. - **Delete Privilege**: Delete a privilege

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package privileges

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateUpdatePrivilegeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUpdatePrivilegeRequest{}

// CreateUpdatePrivilegeRequest struct for CreateUpdatePrivilegeRequest
type CreateUpdatePrivilegeRequest struct {
	// Name of the security system to which the endpoint belongs
	Securitysystem string `json:"securitysystem"`
	// Name of the endpoint to which the entitlement type belongs
	Endpoint string `json:"endpoint"`
	// Name of the entitlement type for the privilege
	Entitlementtype string                                `json:"entitlementtype"`
	Privilege       CreateUpdatePrivilegeRequestPrivilege `json:"privilege"`
}

type _CreateUpdatePrivilegeRequest CreateUpdatePrivilegeRequest

// NewCreateUpdatePrivilegeRequest instantiates a new CreateUpdatePrivilegeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUpdatePrivilegeRequest(securitysystem string, endpoint string, entitlementtype string, privilege CreateUpdatePrivilegeRequestPrivilege) *CreateUpdatePrivilegeRequest {
	this := CreateUpdatePrivilegeRequest{}
	this.Securitysystem = securitysystem
	this.Endpoint = endpoint
	this.Entitlementtype = entitlementtype
	this.Privilege = privilege
	return &this
}

// NewCreateUpdatePrivilegeRequestWithDefaults instantiates a new CreateUpdatePrivilegeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUpdatePrivilegeRequestWithDefaults() *CreateUpdatePrivilegeRequest {
	this := CreateUpdatePrivilegeRequest{}
	return &this
}

// GetSecuritysystem returns the Securitysystem field value
func (o *CreateUpdatePrivilegeRequest) GetSecuritysystem() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Securitysystem
}

// GetSecuritysystemOk returns a tuple with the Securitysystem field value
// and a boolean to check if the value has been set.
func (o *CreateUpdatePrivilegeRequest) GetSecuritysystemOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Securitysystem, true
}

// SetSecuritysystem sets field value
func (o *CreateUpdatePrivilegeRequest) SetSecuritysystem(v string) {
	o.Securitysystem = v
}

// GetEndpoint returns the Endpoint field value
func (o *CreateUpdatePrivilegeRequest) GetEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *CreateUpdatePrivilegeRequest) GetEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *CreateUpdatePrivilegeRequest) SetEndpoint(v string) {
	o.Endpoint = v
}

// GetEntitlementtype returns the Entitlementtype field value
func (o *CreateUpdatePrivilegeRequest) GetEntitlementtype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Entitlementtype
}

// GetEntitlementtypeOk returns a tuple with the Entitlementtype field value
// and a boolean to check if the value has been set.
func (o *CreateUpdatePrivilegeRequest) GetEntitlementtypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entitlementtype, true
}

// SetEntitlementtype sets field value
func (o *CreateUpdatePrivilegeRequest) SetEntitlementtype(v string) {
	o.Entitlementtype = v
}

// GetPrivilege returns the Privilege field value
func (o *CreateUpdatePrivilegeRequest) GetPrivilege() CreateUpdatePrivilegeRequestPrivilege {
	if o == nil {
		var ret CreateUpdatePrivilegeRequestPrivilege
		return ret
	}

	return o.Privilege
}

// GetPrivilegeOk returns a tuple with the Privilege field value
// and a boolean to check if the value has been set.
func (o *CreateUpdatePrivilegeRequest) GetPrivilegeOk() (*CreateUpdatePrivilegeRequestPrivilege, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Privilege, true
}

// SetPrivilege sets field value
func (o *CreateUpdatePrivilegeRequest) SetPrivilege(v CreateUpdatePrivilegeRequestPrivilege) {
	o.Privilege = v
}

func (o CreateUpdatePrivilegeRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUpdatePrivilegeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["securitysystem"] = o.Securitysystem
	toSerialize["endpoint"] = o.Endpoint
	toSerialize["entitlementtype"] = o.Entitlementtype
	toSerialize["privilege"] = o.Privilege
	return toSerialize, nil
}

func (o *CreateUpdatePrivilegeRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"securitysystem",
		"endpoint",
		"entitlementtype",
		"privilege",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateUpdatePrivilegeRequest := _CreateUpdatePrivilegeRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateUpdatePrivilegeRequest)

	if err != nil {
		return err
	}

	*o = CreateUpdatePrivilegeRequest(varCreateUpdatePrivilegeRequest)

	return err
}

type NullableCreateUpdatePrivilegeRequest struct {
	value *CreateUpdatePrivilegeRequest
	isSet bool
}

func (v NullableCreateUpdatePrivilegeRequest) Get() *CreateUpdatePrivilegeRequest {
	return v.value
}

func (v *NullableCreateUpdatePrivilegeRequest) Set(val *CreateUpdatePrivilegeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUpdatePrivilegeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUpdatePrivilegeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUpdatePrivilegeRequest(val *CreateUpdatePrivilegeRequest) *NullableCreateUpdatePrivilegeRequest {
	return &NullableCreateUpdatePrivilegeRequest{value: val, isSet: true}
}

func (v NullableCreateUpdatePrivilegeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUpdatePrivilegeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
