/*
Privilege Management API

API for managing privileges in Saviynt/SSM. - **Create Privilege**: Creates a new privilege. - **Update Privilege**: Updates an existing privilege. - **Get Privilege List**: Returns a list of privileges based on search criteria. - **Delete Privilege**: Delete a privilege

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package privileges

import (
	"encoding/json"
)

// checks if the CreateUpdatePrivilegeRequestPrivilege type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUpdatePrivilegeRequestPrivilege{}

// CreateUpdatePrivilegeRequestPrivilege Privilege object defining the attributes for a privilege
type CreateUpdatePrivilegeRequestPrivilege struct {
	// Attribute name for the privilege
	Attributename *string `json:"attributename,omitempty"`
	// Type of the attribute/privilege
	Attributetype *string `json:"attributetype,omitempty"`
	// Order index
	Orderindex *string `json:"orderindex,omitempty"`
	// Default value for the privilege.
	Defaultvalue *string `json:"defaultvalue,omitempty"`
	// Configuration type for the attribute
	Attributeconfig *string `json:"attributeconfig,omitempty"`
	// Label for the privilege
	Label *string `json:"label,omitempty"`
	// Attribute group
	Attributegroup *string `json:"attributegroup,omitempty"`
	// Parent attribute for the given privilege
	Parentattribute *string `json:"parentattribute,omitempty"`
	// Child action
	Childaction *string `json:"childaction,omitempty"`
	// Description for the privilege
	Description *string `json:"description,omitempty"`
	// Is required
	Required *bool `json:"required,omitempty"`
	// Is requestable
	Requestable *bool `json:"requestable,omitempty"`
	// Hide on create
	Hideoncreate *bool `json:"hideoncreate,omitempty"`
	// Hide on update
	Hideonupd *bool `json:"hideonupd,omitempty"`
	// Action string
	Actionstring *string `json:"actionstring,omitempty"`
}

// NewCreateUpdatePrivilegeRequestPrivilege instantiates a new CreateUpdatePrivilegeRequestPrivilege object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUpdatePrivilegeRequestPrivilege() *CreateUpdatePrivilegeRequestPrivilege {
	this := CreateUpdatePrivilegeRequestPrivilege{}
	return &this
}

// NewCreateUpdatePrivilegeRequestPrivilegeWithDefaults instantiates a new CreateUpdatePrivilegeRequestPrivilege object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUpdatePrivilegeRequestPrivilegeWithDefaults() *CreateUpdatePrivilegeRequestPrivilege {
	this := CreateUpdatePrivilegeRequestPrivilege{}
	return &this
}

// GetAttributename returns the Attributename field value if set, zero value otherwise.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetAttributename() string {
	if o == nil || IsNil(o.Attributename) {
		var ret string
		return ret
	}
	return *o.Attributename
}

// GetAttributenameOk returns a tuple with the Attributename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetAttributenameOk() (*string, bool) {
	if o == nil || IsNil(o.Attributename) {
		return nil, false
	}
	return o.Attributename, true
}

// HasAttributename returns a boolean if a field has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) HasAttributename() bool {
	if o != nil && !IsNil(o.Attributename) {
		return true
	}

	return false
}

// SetAttributename gets a reference to the given string and assigns it to the Attributename field.
func (o *CreateUpdatePrivilegeRequestPrivilege) SetAttributename(v string) {
	o.Attributename = &v
}

// GetAttributetype returns the Attributetype field value if set, zero value otherwise.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetAttributetype() string {
	if o == nil || IsNil(o.Attributetype) {
		var ret string
		return ret
	}
	return *o.Attributetype
}

// GetAttributetypeOk returns a tuple with the Attributetype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetAttributetypeOk() (*string, bool) {
	if o == nil || IsNil(o.Attributetype) {
		return nil, false
	}
	return o.Attributetype, true
}

// HasAttributetype returns a boolean if a field has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) HasAttributetype() bool {
	if o != nil && !IsNil(o.Attributetype) {
		return true
	}

	return false
}

// SetAttributetype gets a reference to the given string and assigns it to the Attributetype field.
func (o *CreateUpdatePrivilegeRequestPrivilege) SetAttributetype(v string) {
	o.Attributetype = &v
}

// GetOrderindex returns the Orderindex field value if set, zero value otherwise.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetOrderindex() string {
	if o == nil || IsNil(o.Orderindex) {
		var ret string
		return ret
	}
	return *o.Orderindex
}

// GetOrderindexOk returns a tuple with the Orderindex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetOrderindexOk() (*string, bool) {
	if o == nil || IsNil(o.Orderindex) {
		return nil, false
	}
	return o.Orderindex, true
}

// HasOrderindex returns a boolean if a field has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) HasOrderindex() bool {
	if o != nil && !IsNil(o.Orderindex) {
		return true
	}

	return false
}

// SetOrderindex gets a reference to the given string and assigns it to the Orderindex field.
func (o *CreateUpdatePrivilegeRequestPrivilege) SetOrderindex(v string) {
	o.Orderindex = &v
}

// GetDefaultvalue returns the Defaultvalue field value if set, zero value otherwise.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetDefaultvalue() string {
	if o == nil || IsNil(o.Defaultvalue) {
		var ret string
		return ret
	}
	return *o.Defaultvalue
}

// GetDefaultvalueOk returns a tuple with the Defaultvalue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetDefaultvalueOk() (*string, bool) {
	if o == nil || IsNil(o.Defaultvalue) {
		return nil, false
	}
	return o.Defaultvalue, true
}

// HasDefaultvalue returns a boolean if a field has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) HasDefaultvalue() bool {
	if o != nil && !IsNil(o.Defaultvalue) {
		return true
	}

	return false
}

// SetDefaultvalue gets a reference to the given string and assigns it to the Defaultvalue field.
func (o *CreateUpdatePrivilegeRequestPrivilege) SetDefaultvalue(v string) {
	o.Defaultvalue = &v
}

// GetAttributeconfig returns the Attributeconfig field value if set, zero value otherwise.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetAttributeconfig() string {
	if o == nil || IsNil(o.Attributeconfig) {
		var ret string
		return ret
	}
	return *o.Attributeconfig
}

// GetAttributeconfigOk returns a tuple with the Attributeconfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetAttributeconfigOk() (*string, bool) {
	if o == nil || IsNil(o.Attributeconfig) {
		return nil, false
	}
	return o.Attributeconfig, true
}

// HasAttributeconfig returns a boolean if a field has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) HasAttributeconfig() bool {
	if o != nil && !IsNil(o.Attributeconfig) {
		return true
	}

	return false
}

// SetAttributeconfig gets a reference to the given string and assigns it to the Attributeconfig field.
func (o *CreateUpdatePrivilegeRequestPrivilege) SetAttributeconfig(v string) {
	o.Attributeconfig = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *CreateUpdatePrivilegeRequestPrivilege) SetLabel(v string) {
	o.Label = &v
}

// GetAttributegroup returns the Attributegroup field value if set, zero value otherwise.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetAttributegroup() string {
	if o == nil || IsNil(o.Attributegroup) {
		var ret string
		return ret
	}
	return *o.Attributegroup
}

// GetAttributegroupOk returns a tuple with the Attributegroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetAttributegroupOk() (*string, bool) {
	if o == nil || IsNil(o.Attributegroup) {
		return nil, false
	}
	return o.Attributegroup, true
}

// HasAttributegroup returns a boolean if a field has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) HasAttributegroup() bool {
	if o != nil && !IsNil(o.Attributegroup) {
		return true
	}

	return false
}

// SetAttributegroup gets a reference to the given string and assigns it to the Attributegroup field.
func (o *CreateUpdatePrivilegeRequestPrivilege) SetAttributegroup(v string) {
	o.Attributegroup = &v
}

// GetParentattribute returns the Parentattribute field value if set, zero value otherwise.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetParentattribute() string {
	if o == nil || IsNil(o.Parentattribute) {
		var ret string
		return ret
	}
	return *o.Parentattribute
}

// GetParentattributeOk returns a tuple with the Parentattribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetParentattributeOk() (*string, bool) {
	if o == nil || IsNil(o.Parentattribute) {
		return nil, false
	}
	return o.Parentattribute, true
}

// HasParentattribute returns a boolean if a field has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) HasParentattribute() bool {
	if o != nil && !IsNil(o.Parentattribute) {
		return true
	}

	return false
}

// SetParentattribute gets a reference to the given string and assigns it to the Parentattribute field.
func (o *CreateUpdatePrivilegeRequestPrivilege) SetParentattribute(v string) {
	o.Parentattribute = &v
}

// GetChildaction returns the Childaction field value if set, zero value otherwise.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetChildaction() string {
	if o == nil || IsNil(o.Childaction) {
		var ret string
		return ret
	}
	return *o.Childaction
}

// GetChildactionOk returns a tuple with the Childaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetChildactionOk() (*string, bool) {
	if o == nil || IsNil(o.Childaction) {
		return nil, false
	}
	return o.Childaction, true
}

// HasChildaction returns a boolean if a field has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) HasChildaction() bool {
	if o != nil && !IsNil(o.Childaction) {
		return true
	}

	return false
}

// SetChildaction gets a reference to the given string and assigns it to the Childaction field.
func (o *CreateUpdatePrivilegeRequestPrivilege) SetChildaction(v string) {
	o.Childaction = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateUpdatePrivilegeRequestPrivilege) SetDescription(v string) {
	o.Description = &v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetRequired() bool {
	if o == nil || IsNil(o.Required) {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) HasRequired() bool {
	if o != nil && !IsNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *CreateUpdatePrivilegeRequestPrivilege) SetRequired(v bool) {
	o.Required = &v
}

// GetRequestable returns the Requestable field value if set, zero value otherwise.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetRequestable() bool {
	if o == nil || IsNil(o.Requestable) {
		var ret bool
		return ret
	}
	return *o.Requestable
}

// GetRequestableOk returns a tuple with the Requestable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetRequestableOk() (*bool, bool) {
	if o == nil || IsNil(o.Requestable) {
		return nil, false
	}
	return o.Requestable, true
}

// HasRequestable returns a boolean if a field has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) HasRequestable() bool {
	if o != nil && !IsNil(o.Requestable) {
		return true
	}

	return false
}

// SetRequestable gets a reference to the given bool and assigns it to the Requestable field.
func (o *CreateUpdatePrivilegeRequestPrivilege) SetRequestable(v bool) {
	o.Requestable = &v
}

// GetHideoncreate returns the Hideoncreate field value if set, zero value otherwise.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetHideoncreate() bool {
	if o == nil || IsNil(o.Hideoncreate) {
		var ret bool
		return ret
	}
	return *o.Hideoncreate
}

// GetHideoncreateOk returns a tuple with the Hideoncreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetHideoncreateOk() (*bool, bool) {
	if o == nil || IsNil(o.Hideoncreate) {
		return nil, false
	}
	return o.Hideoncreate, true
}

// HasHideoncreate returns a boolean if a field has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) HasHideoncreate() bool {
	if o != nil && !IsNil(o.Hideoncreate) {
		return true
	}

	return false
}

// SetHideoncreate gets a reference to the given bool and assigns it to the Hideoncreate field.
func (o *CreateUpdatePrivilegeRequestPrivilege) SetHideoncreate(v bool) {
	o.Hideoncreate = &v
}

// GetHideonupd returns the Hideonupd field value if set, zero value otherwise.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetHideonupd() bool {
	if o == nil || IsNil(o.Hideonupd) {
		var ret bool
		return ret
	}
	return *o.Hideonupd
}

// GetHideonupdOk returns a tuple with the Hideonupd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetHideonupdOk() (*bool, bool) {
	if o == nil || IsNil(o.Hideonupd) {
		return nil, false
	}
	return o.Hideonupd, true
}

// HasHideonupd returns a boolean if a field has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) HasHideonupd() bool {
	if o != nil && !IsNil(o.Hideonupd) {
		return true
	}

	return false
}

// SetHideonupd gets a reference to the given bool and assigns it to the Hideonupd field.
func (o *CreateUpdatePrivilegeRequestPrivilege) SetHideonupd(v bool) {
	o.Hideonupd = &v
}

// GetActionstring returns the Actionstring field value if set, zero value otherwise.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetActionstring() string {
	if o == nil || IsNil(o.Actionstring) {
		var ret string
		return ret
	}
	return *o.Actionstring
}

// GetActionstringOk returns a tuple with the Actionstring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) GetActionstringOk() (*string, bool) {
	if o == nil || IsNil(o.Actionstring) {
		return nil, false
	}
	return o.Actionstring, true
}

// HasActionstring returns a boolean if a field has been set.
func (o *CreateUpdatePrivilegeRequestPrivilege) HasActionstring() bool {
	if o != nil && !IsNil(o.Actionstring) {
		return true
	}

	return false
}

// SetActionstring gets a reference to the given string and assigns it to the Actionstring field.
func (o *CreateUpdatePrivilegeRequestPrivilege) SetActionstring(v string) {
	o.Actionstring = &v
}

func (o CreateUpdatePrivilegeRequestPrivilege) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUpdatePrivilegeRequestPrivilege) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attributename) {
		toSerialize["attributename"] = o.Attributename
	}
	if !IsNil(o.Attributetype) {
		toSerialize["attributetype"] = o.Attributetype
	}
	if !IsNil(o.Orderindex) {
		toSerialize["orderindex"] = o.Orderindex
	}
	if !IsNil(o.Defaultvalue) {
		toSerialize["defaultvalue"] = o.Defaultvalue
	}
	if !IsNil(o.Attributeconfig) {
		toSerialize["attributeconfig"] = o.Attributeconfig
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Attributegroup) {
		toSerialize["attributegroup"] = o.Attributegroup
	}
	if !IsNil(o.Parentattribute) {
		toSerialize["parentattribute"] = o.Parentattribute
	}
	if !IsNil(o.Childaction) {
		toSerialize["childaction"] = o.Childaction
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Required) {
		toSerialize["required"] = o.Required
	}
	if !IsNil(o.Requestable) {
		toSerialize["requestable"] = o.Requestable
	}
	if !IsNil(o.Hideoncreate) {
		toSerialize["hideoncreate"] = o.Hideoncreate
	}
	if !IsNil(o.Hideonupd) {
		toSerialize["hideonupd"] = o.Hideonupd
	}
	if !IsNil(o.Actionstring) {
		toSerialize["actionstring"] = o.Actionstring
	}
	return toSerialize, nil
}

type NullableCreateUpdatePrivilegeRequestPrivilege struct {
	value *CreateUpdatePrivilegeRequestPrivilege
	isSet bool
}

func (v NullableCreateUpdatePrivilegeRequestPrivilege) Get() *CreateUpdatePrivilegeRequestPrivilege {
	return v.value
}

func (v *NullableCreateUpdatePrivilegeRequestPrivilege) Set(val *CreateUpdatePrivilegeRequestPrivilege) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUpdatePrivilegeRequestPrivilege) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUpdatePrivilegeRequestPrivilege) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUpdatePrivilegeRequestPrivilege(val *CreateUpdatePrivilegeRequestPrivilege) *NullableCreateUpdatePrivilegeRequestPrivilege {
	return &NullableCreateUpdatePrivilegeRequestPrivilege{value: val, isSet: true}
}

func (v NullableCreateUpdatePrivilegeRequestPrivilege) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUpdatePrivilegeRequestPrivilege) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
