/*
Privilege Management API

API for managing privileges in Saviynt/SSM. - **Create Privilege**: Creates a new privilege. - **Update Privilege**: Updates an existing privilege. - **Get Privilege List**: Returns a list of privileges based on search criteria. - **Delete Privilege**: Delete a privilege

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package privileges

import (
	"encoding/json"
)

// checks if the DeletePrivilegeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeletePrivilegeResponse{}

// DeletePrivilegeResponse struct for DeletePrivilegeResponse
type DeletePrivilegeResponse struct {
	// Response message
	Msg *string `json:"msg,omitempty"`
	// Error code
	Errorcode *int32 `json:"errorcode,omitempty"`
	// Security system validation error
	Securitysystem *string `json:"securitysystem,omitempty"`
	// Endpoint validation error
	Endpoint *string `json:"endpoint,omitempty"`
	// Entitlement type validation error
	Entitlementtype *string                           `json:"entitlementtype,omitempty"`
	Privilege       *DeletePrivilegeResponsePrivilege `json:"privilege,omitempty"`
}

// NewDeletePrivilegeResponse instantiates a new DeletePrivilegeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeletePrivilegeResponse() *DeletePrivilegeResponse {
	this := DeletePrivilegeResponse{}
	return &this
}

// NewDeletePrivilegeResponseWithDefaults instantiates a new DeletePrivilegeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeletePrivilegeResponseWithDefaults() *DeletePrivilegeResponse {
	this := DeletePrivilegeResponse{}
	return &this
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *DeletePrivilegeResponse) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletePrivilegeResponse) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *DeletePrivilegeResponse) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *DeletePrivilegeResponse) SetMsg(v string) {
	o.Msg = &v
}

// GetErrorcode returns the Errorcode field value if set, zero value otherwise.
func (o *DeletePrivilegeResponse) GetErrorcode() int32 {
	if o == nil || IsNil(o.Errorcode) {
		var ret int32
		return ret
	}
	return *o.Errorcode
}

// GetErrorcodeOk returns a tuple with the Errorcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletePrivilegeResponse) GetErrorcodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Errorcode) {
		return nil, false
	}
	return o.Errorcode, true
}

// HasErrorcode returns a boolean if a field has been set.
func (o *DeletePrivilegeResponse) HasErrorcode() bool {
	if o != nil && !IsNil(o.Errorcode) {
		return true
	}

	return false
}

// SetErrorcode gets a reference to the given int32 and assigns it to the Errorcode field.
func (o *DeletePrivilegeResponse) SetErrorcode(v int32) {
	o.Errorcode = &v
}

// GetSecuritysystem returns the Securitysystem field value if set, zero value otherwise.
func (o *DeletePrivilegeResponse) GetSecuritysystem() string {
	if o == nil || IsNil(o.Securitysystem) {
		var ret string
		return ret
	}
	return *o.Securitysystem
}

// GetSecuritysystemOk returns a tuple with the Securitysystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletePrivilegeResponse) GetSecuritysystemOk() (*string, bool) {
	if o == nil || IsNil(o.Securitysystem) {
		return nil, false
	}
	return o.Securitysystem, true
}

// HasSecuritysystem returns a boolean if a field has been set.
func (o *DeletePrivilegeResponse) HasSecuritysystem() bool {
	if o != nil && !IsNil(o.Securitysystem) {
		return true
	}

	return false
}

// SetSecuritysystem gets a reference to the given string and assigns it to the Securitysystem field.
func (o *DeletePrivilegeResponse) SetSecuritysystem(v string) {
	o.Securitysystem = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *DeletePrivilegeResponse) GetEndpoint() string {
	if o == nil || IsNil(o.Endpoint) {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletePrivilegeResponse) GetEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *DeletePrivilegeResponse) HasEndpoint() bool {
	if o != nil && !IsNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *DeletePrivilegeResponse) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetEntitlementtype returns the Entitlementtype field value if set, zero value otherwise.
func (o *DeletePrivilegeResponse) GetEntitlementtype() string {
	if o == nil || IsNil(o.Entitlementtype) {
		var ret string
		return ret
	}
	return *o.Entitlementtype
}

// GetEntitlementtypeOk returns a tuple with the Entitlementtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletePrivilegeResponse) GetEntitlementtypeOk() (*string, bool) {
	if o == nil || IsNil(o.Entitlementtype) {
		return nil, false
	}
	return o.Entitlementtype, true
}

// HasEntitlementtype returns a boolean if a field has been set.
func (o *DeletePrivilegeResponse) HasEntitlementtype() bool {
	if o != nil && !IsNil(o.Entitlementtype) {
		return true
	}

	return false
}

// SetEntitlementtype gets a reference to the given string and assigns it to the Entitlementtype field.
func (o *DeletePrivilegeResponse) SetEntitlementtype(v string) {
	o.Entitlementtype = &v
}

// GetPrivilege returns the Privilege field value if set, zero value otherwise.
func (o *DeletePrivilegeResponse) GetPrivilege() DeletePrivilegeResponsePrivilege {
	if o == nil || IsNil(o.Privilege) {
		var ret DeletePrivilegeResponsePrivilege
		return ret
	}
	return *o.Privilege
}

// GetPrivilegeOk returns a tuple with the Privilege field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletePrivilegeResponse) GetPrivilegeOk() (*DeletePrivilegeResponsePrivilege, bool) {
	if o == nil || IsNil(o.Privilege) {
		return nil, false
	}
	return o.Privilege, true
}

// HasPrivilege returns a boolean if a field has been set.
func (o *DeletePrivilegeResponse) HasPrivilege() bool {
	if o != nil && !IsNil(o.Privilege) {
		return true
	}

	return false
}

// SetPrivilege gets a reference to the given DeletePrivilegeResponsePrivilege and assigns it to the Privilege field.
func (o *DeletePrivilegeResponse) SetPrivilege(v DeletePrivilegeResponsePrivilege) {
	o.Privilege = &v
}

func (o DeletePrivilegeResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeletePrivilegeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.Errorcode) {
		toSerialize["errorcode"] = o.Errorcode
	}
	if !IsNil(o.Securitysystem) {
		toSerialize["securitysystem"] = o.Securitysystem
	}
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	if !IsNil(o.Entitlementtype) {
		toSerialize["entitlementtype"] = o.Entitlementtype
	}
	if !IsNil(o.Privilege) {
		toSerialize["privilege"] = o.Privilege
	}
	return toSerialize, nil
}

type NullableDeletePrivilegeResponse struct {
	value *DeletePrivilegeResponse
	isSet bool
}

func (v NullableDeletePrivilegeResponse) Get() *DeletePrivilegeResponse {
	return v.value
}

func (v *NullableDeletePrivilegeResponse) Set(val *DeletePrivilegeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeletePrivilegeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeletePrivilegeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeletePrivilegeResponse(val *DeletePrivilegeResponse) *NullableDeletePrivilegeResponse {
	return &NullableDeletePrivilegeResponse{value: val, isSet: true}
}

func (v NullableDeletePrivilegeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeletePrivilegeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
