/*
Privilege Management API

API for managing privileges in Saviynt/SSM. - **Create Privilege**: Creates a new privilege. - **Update Privilege**: Updates an existing privilege. - **Get Privilege List**: Returns a list of privileges based on search criteria. - **Delete Privilege**: Delete a privilege

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package privileges

import (
	"encoding/json"
)

// checks if the GetPrivilegeListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPrivilegeListResponse{}

// GetPrivilegeListResponse struct for GetPrivilegeListResponse
type GetPrivilegeListResponse struct {
	// Response message
	Msg *string `json:"msg,omitempty"`
	// Error code
	ErrorCode *string `json:"errorCode,omitempty"`
	// Number of results returned
	DisplayCount *int32 `json:"displayCount,omitempty"`
	// Total number of privileges for the given filter
	TotalCount       *int32               `json:"totalCount,omitempty"`
	PrivilegeDetails []GetPrivilegeDetail `json:"PrivilegeDetails,omitempty"`
}

// NewGetPrivilegeListResponse instantiates a new GetPrivilegeListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPrivilegeListResponse() *GetPrivilegeListResponse {
	this := GetPrivilegeListResponse{}
	return &this
}

// NewGetPrivilegeListResponseWithDefaults instantiates a new GetPrivilegeListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPrivilegeListResponseWithDefaults() *GetPrivilegeListResponse {
	this := GetPrivilegeListResponse{}
	return &this
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *GetPrivilegeListResponse) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPrivilegeListResponse) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *GetPrivilegeListResponse) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *GetPrivilegeListResponse) SetMsg(v string) {
	o.Msg = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *GetPrivilegeListResponse) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPrivilegeListResponse) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *GetPrivilegeListResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *GetPrivilegeListResponse) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetDisplayCount returns the DisplayCount field value if set, zero value otherwise.
func (o *GetPrivilegeListResponse) GetDisplayCount() int32 {
	if o == nil || IsNil(o.DisplayCount) {
		var ret int32
		return ret
	}
	return *o.DisplayCount
}

// GetDisplayCountOk returns a tuple with the DisplayCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPrivilegeListResponse) GetDisplayCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DisplayCount) {
		return nil, false
	}
	return o.DisplayCount, true
}

// HasDisplayCount returns a boolean if a field has been set.
func (o *GetPrivilegeListResponse) HasDisplayCount() bool {
	if o != nil && !IsNil(o.DisplayCount) {
		return true
	}

	return false
}

// SetDisplayCount gets a reference to the given int32 and assigns it to the DisplayCount field.
func (o *GetPrivilegeListResponse) SetDisplayCount(v int32) {
	o.DisplayCount = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *GetPrivilegeListResponse) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPrivilegeListResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *GetPrivilegeListResponse) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *GetPrivilegeListResponse) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetPrivilegeDetails returns the PrivilegeDetails field value if set, zero value otherwise.
func (o *GetPrivilegeListResponse) GetPrivilegeDetails() []GetPrivilegeDetail {
	if o == nil || IsNil(o.PrivilegeDetails) {
		var ret []GetPrivilegeDetail
		return ret
	}
	return o.PrivilegeDetails
}

// GetPrivilegeDetailsOk returns a tuple with the PrivilegeDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPrivilegeListResponse) GetPrivilegeDetailsOk() ([]GetPrivilegeDetail, bool) {
	if o == nil || IsNil(o.PrivilegeDetails) {
		return nil, false
	}
	return o.PrivilegeDetails, true
}

// HasPrivilegeDetails returns a boolean if a field has been set.
func (o *GetPrivilegeListResponse) HasPrivilegeDetails() bool {
	if o != nil && !IsNil(o.PrivilegeDetails) {
		return true
	}

	return false
}

// SetPrivilegeDetails gets a reference to the given []GetPrivilegeDetail and assigns it to the PrivilegeDetails field.
func (o *GetPrivilegeListResponse) SetPrivilegeDetails(v []GetPrivilegeDetail) {
	o.PrivilegeDetails = v
}

func (o GetPrivilegeListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPrivilegeListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.DisplayCount) {
		toSerialize["displayCount"] = o.DisplayCount
	}
	if !IsNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	if !IsNil(o.PrivilegeDetails) {
		toSerialize["PrivilegeDetails"] = o.PrivilegeDetails
	}
	return toSerialize, nil
}

type NullableGetPrivilegeListResponse struct {
	value *GetPrivilegeListResponse
	isSet bool
}

func (v NullableGetPrivilegeListResponse) Get() *GetPrivilegeListResponse {
	return v.value
}

func (v *NullableGetPrivilegeListResponse) Set(val *GetPrivilegeListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPrivilegeListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPrivilegeListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPrivilegeListResponse(val *GetPrivilegeListResponse) *NullableGetPrivilegeListResponse {
	return &NullableGetPrivilegeListResponse{value: val, isSet: true}
}

func (v NullableGetPrivilegeListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPrivilegeListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
