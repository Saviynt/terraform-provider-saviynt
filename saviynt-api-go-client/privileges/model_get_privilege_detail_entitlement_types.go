/*
Privilege Management API

API for managing privileges in Saviynt/SSM. - **Create Privilege**: Creates a new privilege. - **Update Privilege**: Updates an existing privilege. - **Get Privilege List**: Returns a list of privileges based on search criteria. - **Delete Privilege**: Delete a privilege 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package privileges

import (
	"encoding/json"
)

// checks if the GetPrivilegeDetailEntitlementTypes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPrivilegeDetailEntitlementTypes{}

// GetPrivilegeDetailEntitlementTypes struct for GetPrivilegeDetailEntitlementTypes
type GetPrivilegeDetailEntitlementTypes struct {
	Entitlementname *string `json:"entitlementname,omitempty"`
	Endpointkey *string `json:"endpointkey,omitempty"`
}

// NewGetPrivilegeDetailEntitlementTypes instantiates a new GetPrivilegeDetailEntitlementTypes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPrivilegeDetailEntitlementTypes() *GetPrivilegeDetailEntitlementTypes {
	this := GetPrivilegeDetailEntitlementTypes{}
	return &this
}

// NewGetPrivilegeDetailEntitlementTypesWithDefaults instantiates a new GetPrivilegeDetailEntitlementTypes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPrivilegeDetailEntitlementTypesWithDefaults() *GetPrivilegeDetailEntitlementTypes {
	this := GetPrivilegeDetailEntitlementTypes{}
	return &this
}

// GetEntitlementname returns the Entitlementname field value if set, zero value otherwise.
func (o *GetPrivilegeDetailEntitlementTypes) GetEntitlementname() string {
	if o == nil || IsNil(o.Entitlementname) {
		var ret string
		return ret
	}
	return *o.Entitlementname
}

// GetEntitlementnameOk returns a tuple with the Entitlementname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPrivilegeDetailEntitlementTypes) GetEntitlementnameOk() (*string, bool) {
	if o == nil || IsNil(o.Entitlementname) {
		return nil, false
	}
	return o.Entitlementname, true
}

// HasEntitlementname returns a boolean if a field has been set.
func (o *GetPrivilegeDetailEntitlementTypes) HasEntitlementname() bool {
	if o != nil && !IsNil(o.Entitlementname) {
		return true
	}

	return false
}

// SetEntitlementname gets a reference to the given string and assigns it to the Entitlementname field.
func (o *GetPrivilegeDetailEntitlementTypes) SetEntitlementname(v string) {
	o.Entitlementname = &v
}

// GetEndpointkey returns the Endpointkey field value if set, zero value otherwise.
func (o *GetPrivilegeDetailEntitlementTypes) GetEndpointkey() string {
	if o == nil || IsNil(o.Endpointkey) {
		var ret string
		return ret
	}
	return *o.Endpointkey
}

// GetEndpointkeyOk returns a tuple with the Endpointkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPrivilegeDetailEntitlementTypes) GetEndpointkeyOk() (*string, bool) {
	if o == nil || IsNil(o.Endpointkey) {
		return nil, false
	}
	return o.Endpointkey, true
}

// HasEndpointkey returns a boolean if a field has been set.
func (o *GetPrivilegeDetailEntitlementTypes) HasEndpointkey() bool {
	if o != nil && !IsNil(o.Endpointkey) {
		return true
	}

	return false
}

// SetEndpointkey gets a reference to the given string and assigns it to the Endpointkey field.
func (o *GetPrivilegeDetailEntitlementTypes) SetEndpointkey(v string) {
	o.Endpointkey = &v
}

func (o GetPrivilegeDetailEntitlementTypes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPrivilegeDetailEntitlementTypes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Entitlementname) {
		toSerialize["entitlementname"] = o.Entitlementname
	}
	if !IsNil(o.Endpointkey) {
		toSerialize["endpointkey"] = o.Endpointkey
	}
	return toSerialize, nil
}

type NullableGetPrivilegeDetailEntitlementTypes struct {
	value *GetPrivilegeDetailEntitlementTypes
	isSet bool
}

func (v NullableGetPrivilegeDetailEntitlementTypes) Get() *GetPrivilegeDetailEntitlementTypes {
	return v.value
}

func (v *NullableGetPrivilegeDetailEntitlementTypes) Set(val *GetPrivilegeDetailEntitlementTypes) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPrivilegeDetailEntitlementTypes) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPrivilegeDetailEntitlementTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPrivilegeDetailEntitlementTypes(val *GetPrivilegeDetailEntitlementTypes) *NullableGetPrivilegeDetailEntitlementTypes {
	return &NullableGetPrivilegeDetailEntitlementTypes{value: val, isSet: true}
}

func (v NullableGetPrivilegeDetailEntitlementTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPrivilegeDetailEntitlementTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


