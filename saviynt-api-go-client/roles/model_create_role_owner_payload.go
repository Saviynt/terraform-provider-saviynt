/*
Saviynt API

API for managing roles in Saviynt.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package roles

import (
	"encoding/json"
)

// checks if the CreateRoleOwnerPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRoleOwnerPayload{}

// CreateRoleOwnerPayload struct for CreateRoleOwnerPayload
type CreateRoleOwnerPayload struct {
	OwnerName *string `json:"ownerName,omitempty"`
	Rank      *string `json:"rank,omitempty"`
}

// NewCreateRoleOwnerPayload instantiates a new CreateRoleOwnerPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRoleOwnerPayload() *CreateRoleOwnerPayload {
	this := CreateRoleOwnerPayload{}
	return &this
}

// NewCreateRoleOwnerPayloadWithDefaults instantiates a new CreateRoleOwnerPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRoleOwnerPayloadWithDefaults() *CreateRoleOwnerPayload {
	this := CreateRoleOwnerPayload{}
	return &this
}

// GetOwnerName returns the OwnerName field value if set, zero value otherwise.
func (o *CreateRoleOwnerPayload) GetOwnerName() string {
	if o == nil || IsNil(o.OwnerName) {
		var ret string
		return ret
	}
	return *o.OwnerName
}

// GetOwnerNameOk returns a tuple with the OwnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRoleOwnerPayload) GetOwnerNameOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerName) {
		return nil, false
	}
	return o.OwnerName, true
}

// HasOwnerName returns a boolean if a field has been set.
func (o *CreateRoleOwnerPayload) HasOwnerName() bool {
	if o != nil && !IsNil(o.OwnerName) {
		return true
	}

	return false
}

// SetOwnerName gets a reference to the given string and assigns it to the OwnerName field.
func (o *CreateRoleOwnerPayload) SetOwnerName(v string) {
	o.OwnerName = &v
}

// GetRank returns the Rank field value if set, zero value otherwise.
func (o *CreateRoleOwnerPayload) GetRank() string {
	if o == nil || IsNil(o.Rank) {
		var ret string
		return ret
	}
	return *o.Rank
}

// GetRankOk returns a tuple with the Rank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRoleOwnerPayload) GetRankOk() (*string, bool) {
	if o == nil || IsNil(o.Rank) {
		return nil, false
	}
	return o.Rank, true
}

// HasRank returns a boolean if a field has been set.
func (o *CreateRoleOwnerPayload) HasRank() bool {
	if o != nil && !IsNil(o.Rank) {
		return true
	}

	return false
}

// SetRank gets a reference to the given string and assigns it to the Rank field.
func (o *CreateRoleOwnerPayload) SetRank(v string) {
	o.Rank = &v
}

func (o CreateRoleOwnerPayload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRoleOwnerPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OwnerName) {
		toSerialize["ownerName"] = o.OwnerName
	}
	if !IsNil(o.Rank) {
		toSerialize["rank"] = o.Rank
	}
	return toSerialize, nil
}

type NullableCreateRoleOwnerPayload struct {
	value *CreateRoleOwnerPayload
	isSet bool
}

func (v NullableCreateRoleOwnerPayload) Get() *CreateRoleOwnerPayload {
	return v.value
}

func (v *NullableCreateRoleOwnerPayload) Set(val *CreateRoleOwnerPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRoleOwnerPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRoleOwnerPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRoleOwnerPayload(val *CreateRoleOwnerPayload) *NullableCreateRoleOwnerPayload {
	return &NullableCreateRoleOwnerPayload{value: val, isSet: true}
}

func (v NullableCreateRoleOwnerPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRoleOwnerPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
