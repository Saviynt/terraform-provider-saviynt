/*
Saviynt API

API for managing roles in Saviynt.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package roles

import (
	"encoding/json"
)

// checks if the GetRolesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRolesResponse{}

// GetRolesResponse struct for GetRolesResponse
type GetRolesResponse struct {
	Msg *string `json:"msg,omitempty"`
	DisplayCount *int32 `json:"displayCount,omitempty"`
	ErrorCode *string `json:"errorCode,omitempty"`
	TotalCount *int32 `json:"totalCount,omitempty"`
	Roledetails []GetRoleDetailsResponse `json:"Roledetails,omitempty"`
}

// NewGetRolesResponse instantiates a new GetRolesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRolesResponse() *GetRolesResponse {
	this := GetRolesResponse{}
	return &this
}

// NewGetRolesResponseWithDefaults instantiates a new GetRolesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRolesResponseWithDefaults() *GetRolesResponse {
	this := GetRolesResponse{}
	return &this
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *GetRolesResponse) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRolesResponse) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *GetRolesResponse) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *GetRolesResponse) SetMsg(v string) {
	o.Msg = &v
}

// GetDisplayCount returns the DisplayCount field value if set, zero value otherwise.
func (o *GetRolesResponse) GetDisplayCount() int32 {
	if o == nil || IsNil(o.DisplayCount) {
		var ret int32
		return ret
	}
	return *o.DisplayCount
}

// GetDisplayCountOk returns a tuple with the DisplayCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRolesResponse) GetDisplayCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DisplayCount) {
		return nil, false
	}
	return o.DisplayCount, true
}

// HasDisplayCount returns a boolean if a field has been set.
func (o *GetRolesResponse) HasDisplayCount() bool {
	if o != nil && !IsNil(o.DisplayCount) {
		return true
	}

	return false
}

// SetDisplayCount gets a reference to the given int32 and assigns it to the DisplayCount field.
func (o *GetRolesResponse) SetDisplayCount(v int32) {
	o.DisplayCount = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *GetRolesResponse) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRolesResponse) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *GetRolesResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *GetRolesResponse) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *GetRolesResponse) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRolesResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *GetRolesResponse) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *GetRolesResponse) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetRoledetails returns the Roledetails field value if set, zero value otherwise.
func (o *GetRolesResponse) GetRoledetails() []GetRoleDetailsResponse {
	if o == nil || IsNil(o.Roledetails) {
		var ret []GetRoleDetailsResponse
		return ret
	}
	return o.Roledetails
}

// GetRoledetailsOk returns a tuple with the Roledetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRolesResponse) GetRoledetailsOk() ([]GetRoleDetailsResponse, bool) {
	if o == nil || IsNil(o.Roledetails) {
		return nil, false
	}
	return o.Roledetails, true
}

// HasRoledetails returns a boolean if a field has been set.
func (o *GetRolesResponse) HasRoledetails() bool {
	if o != nil && !IsNil(o.Roledetails) {
		return true
	}

	return false
}

// SetRoledetails gets a reference to the given []GetRoleDetailsResponse and assigns it to the Roledetails field.
func (o *GetRolesResponse) SetRoledetails(v []GetRoleDetailsResponse) {
	o.Roledetails = v
}

func (o GetRolesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRolesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.DisplayCount) {
		toSerialize["displayCount"] = o.DisplayCount
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	if !IsNil(o.Roledetails) {
		toSerialize["Roledetails"] = o.Roledetails
	}
	return toSerialize, nil
}

type NullableGetRolesResponse struct {
	value *GetRolesResponse
	isSet bool
}

func (v NullableGetRolesResponse) Get() *GetRolesResponse {
	return v.value
}

func (v *NullableGetRolesResponse) Set(val *GetRolesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRolesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRolesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRolesResponse(val *GetRolesResponse) *NullableGetRolesResponse {
	return &NullableGetRolesResponse{value: val, isSet: true}
}

func (v NullableGetRolesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRolesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


