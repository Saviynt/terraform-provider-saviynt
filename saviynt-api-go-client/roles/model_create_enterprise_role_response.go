/*
Saviynt API

API for managing roles in Saviynt.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package roles

import (
	"encoding/json"
)

// checks if the CreateEnterpriseRoleResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEnterpriseRoleResponse{}

// CreateEnterpriseRoleResponse struct for CreateEnterpriseRoleResponse
type CreateEnterpriseRoleResponse struct {
	Requestid  *string `json:"requestid,omitempty"`
	Requestkey *string `json:"requestkey,omitempty"`
	ErrorCode  *string `json:"errorCode,omitempty"`
	Message    *string `json:"message,omitempty"`
}

// NewCreateEnterpriseRoleResponse instantiates a new CreateEnterpriseRoleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEnterpriseRoleResponse() *CreateEnterpriseRoleResponse {
	this := CreateEnterpriseRoleResponse{}
	return &this
}

// NewCreateEnterpriseRoleResponseWithDefaults instantiates a new CreateEnterpriseRoleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEnterpriseRoleResponseWithDefaults() *CreateEnterpriseRoleResponse {
	this := CreateEnterpriseRoleResponse{}
	return &this
}

// GetRequestid returns the Requestid field value if set, zero value otherwise.
func (o *CreateEnterpriseRoleResponse) GetRequestid() string {
	if o == nil || IsNil(o.Requestid) {
		var ret string
		return ret
	}
	return *o.Requestid
}

// GetRequestidOk returns a tuple with the Requestid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEnterpriseRoleResponse) GetRequestidOk() (*string, bool) {
	if o == nil || IsNil(o.Requestid) {
		return nil, false
	}
	return o.Requestid, true
}

// HasRequestid returns a boolean if a field has been set.
func (o *CreateEnterpriseRoleResponse) HasRequestid() bool {
	if o != nil && !IsNil(o.Requestid) {
		return true
	}

	return false
}

// SetRequestid gets a reference to the given string and assigns it to the Requestid field.
func (o *CreateEnterpriseRoleResponse) SetRequestid(v string) {
	o.Requestid = &v
}

// GetRequestkey returns the Requestkey field value if set, zero value otherwise.
func (o *CreateEnterpriseRoleResponse) GetRequestkey() string {
	if o == nil || IsNil(o.Requestkey) {
		var ret string
		return ret
	}
	return *o.Requestkey
}

// GetRequestkeyOk returns a tuple with the Requestkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEnterpriseRoleResponse) GetRequestkeyOk() (*string, bool) {
	if o == nil || IsNil(o.Requestkey) {
		return nil, false
	}
	return o.Requestkey, true
}

// HasRequestkey returns a boolean if a field has been set.
func (o *CreateEnterpriseRoleResponse) HasRequestkey() bool {
	if o != nil && !IsNil(o.Requestkey) {
		return true
	}

	return false
}

// SetRequestkey gets a reference to the given string and assigns it to the Requestkey field.
func (o *CreateEnterpriseRoleResponse) SetRequestkey(v string) {
	o.Requestkey = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *CreateEnterpriseRoleResponse) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEnterpriseRoleResponse) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *CreateEnterpriseRoleResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *CreateEnterpriseRoleResponse) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *CreateEnterpriseRoleResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEnterpriseRoleResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *CreateEnterpriseRoleResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *CreateEnterpriseRoleResponse) SetMessage(v string) {
	o.Message = &v
}

func (o CreateEnterpriseRoleResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEnterpriseRoleResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Requestid) {
		toSerialize["requestid"] = o.Requestid
	}
	if !IsNil(o.Requestkey) {
		toSerialize["requestkey"] = o.Requestkey
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableCreateEnterpriseRoleResponse struct {
	value *CreateEnterpriseRoleResponse
	isSet bool
}

func (v NullableCreateEnterpriseRoleResponse) Get() *CreateEnterpriseRoleResponse {
	return v.value
}

func (v *NullableCreateEnterpriseRoleResponse) Set(val *CreateEnterpriseRoleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEnterpriseRoleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEnterpriseRoleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEnterpriseRoleResponse(val *CreateEnterpriseRoleResponse) *NullableCreateEnterpriseRoleResponse {
	return &NullableCreateEnterpriseRoleResponse{value: val, isSet: true}
}

func (v NullableCreateEnterpriseRoleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEnterpriseRoleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
