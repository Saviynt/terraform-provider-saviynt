/*
Saviynt API

API for managing roles in Saviynt.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package roles

import (
	"encoding/json"
)

// checks if the GetRoleOwnersResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRoleOwnersResponse{}

// GetRoleOwnersResponse struct for GetRoleOwnersResponse
type GetRoleOwnersResponse struct {
	Ownername *string `json:"ownername,omitempty"`
	Rank      *string `json:"rank,omitempty"`
}

// NewGetRoleOwnersResponse instantiates a new GetRoleOwnersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRoleOwnersResponse() *GetRoleOwnersResponse {
	this := GetRoleOwnersResponse{}
	return &this
}

// NewGetRoleOwnersResponseWithDefaults instantiates a new GetRoleOwnersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRoleOwnersResponseWithDefaults() *GetRoleOwnersResponse {
	this := GetRoleOwnersResponse{}
	return &this
}

// GetOwnername returns the Ownername field value if set, zero value otherwise.
func (o *GetRoleOwnersResponse) GetOwnername() string {
	if o == nil || IsNil(o.Ownername) {
		var ret string
		return ret
	}
	return *o.Ownername
}

// GetOwnernameOk returns a tuple with the Ownername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleOwnersResponse) GetOwnernameOk() (*string, bool) {
	if o == nil || IsNil(o.Ownername) {
		return nil, false
	}
	return o.Ownername, true
}

// HasOwnername returns a boolean if a field has been set.
func (o *GetRoleOwnersResponse) HasOwnername() bool {
	if o != nil && !IsNil(o.Ownername) {
		return true
	}

	return false
}

// SetOwnername gets a reference to the given string and assigns it to the Ownername field.
func (o *GetRoleOwnersResponse) SetOwnername(v string) {
	o.Ownername = &v
}

// GetRank returns the Rank field value if set, zero value otherwise.
func (o *GetRoleOwnersResponse) GetRank() string {
	if o == nil || IsNil(o.Rank) {
		var ret string
		return ret
	}
	return *o.Rank
}

// GetRankOk returns a tuple with the Rank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleOwnersResponse) GetRankOk() (*string, bool) {
	if o == nil || IsNil(o.Rank) {
		return nil, false
	}
	return o.Rank, true
}

// HasRank returns a boolean if a field has been set.
func (o *GetRoleOwnersResponse) HasRank() bool {
	if o != nil && !IsNil(o.Rank) {
		return true
	}

	return false
}

// SetRank gets a reference to the given string and assigns it to the Rank field.
func (o *GetRoleOwnersResponse) SetRank(v string) {
	o.Rank = &v
}

func (o GetRoleOwnersResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRoleOwnersResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ownername) {
		toSerialize["ownername"] = o.Ownername
	}
	if !IsNil(o.Rank) {
		toSerialize["rank"] = o.Rank
	}
	return toSerialize, nil
}

type NullableGetRoleOwnersResponse struct {
	value *GetRoleOwnersResponse
	isSet bool
}

func (v NullableGetRoleOwnersResponse) Get() *GetRoleOwnersResponse {
	return v.value
}

func (v *NullableGetRoleOwnersResponse) Set(val *GetRoleOwnersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRoleOwnersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRoleOwnersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRoleOwnersResponse(val *GetRoleOwnersResponse) *NullableGetRoleOwnersResponse {
	return &NullableGetRoleOwnersResponse{value: val, isSet: true}
}

func (v NullableGetRoleOwnersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRoleOwnersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
