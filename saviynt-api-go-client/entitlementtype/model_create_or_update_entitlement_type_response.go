/*
Entitlement Type Management API

API for managing entitlement types in Saviynt/SSM. - **Create Entitlement Type**: Creates a new entitlement type. - **Update Entitlement Type**: Updates an existing entitlement type. - **Get Entitlement Type List**: Returns a list of entitlement types based on search criteria.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package entitlementtype

import (
	"encoding/json"
)

// checks if the CreateOrUpdateEntitlementTypeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrUpdateEntitlementTypeResponse{}

// CreateOrUpdateEntitlementTypeResponse struct for CreateOrUpdateEntitlementTypeResponse
type CreateOrUpdateEntitlementTypeResponse struct {
	// A message indicating the outcome of the operation.
	Msg *string `json:"msg,omitempty"`
	// An error code where '0' signifies success and '1' signifies an unsuccessful operation.
	ErrorCode *string `json:"errorCode,omitempty"`
}

// NewCreateOrUpdateEntitlementTypeResponse instantiates a new CreateOrUpdateEntitlementTypeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateEntitlementTypeResponse() *CreateOrUpdateEntitlementTypeResponse {
	this := CreateOrUpdateEntitlementTypeResponse{}
	return &this
}

// NewCreateOrUpdateEntitlementTypeResponseWithDefaults instantiates a new CreateOrUpdateEntitlementTypeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateEntitlementTypeResponseWithDefaults() *CreateOrUpdateEntitlementTypeResponse {
	this := CreateOrUpdateEntitlementTypeResponse{}
	return &this
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *CreateOrUpdateEntitlementTypeResponse) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateEntitlementTypeResponse) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *CreateOrUpdateEntitlementTypeResponse) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *CreateOrUpdateEntitlementTypeResponse) SetMsg(v string) {
	o.Msg = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *CreateOrUpdateEntitlementTypeResponse) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateEntitlementTypeResponse) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *CreateOrUpdateEntitlementTypeResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *CreateOrUpdateEntitlementTypeResponse) SetErrorCode(v string) {
	o.ErrorCode = &v
}

func (o CreateOrUpdateEntitlementTypeResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrUpdateEntitlementTypeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	return toSerialize, nil
}

type NullableCreateOrUpdateEntitlementTypeResponse struct {
	value *CreateOrUpdateEntitlementTypeResponse
	isSet bool
}

func (v NullableCreateOrUpdateEntitlementTypeResponse) Get() *CreateOrUpdateEntitlementTypeResponse {
	return v.value
}

func (v *NullableCreateOrUpdateEntitlementTypeResponse) Set(val *CreateOrUpdateEntitlementTypeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateEntitlementTypeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateEntitlementTypeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateEntitlementTypeResponse(val *CreateOrUpdateEntitlementTypeResponse) *NullableCreateOrUpdateEntitlementTypeResponse {
	return &NullableCreateOrUpdateEntitlementTypeResponse{value: val, isSet: true}
}

func (v NullableCreateOrUpdateEntitlementTypeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateEntitlementTypeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
