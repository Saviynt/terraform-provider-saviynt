// Copyright (c) Saviynt Inc.
// SPDX-License-Identifier: MPL-2.0

/*
Entitlement Type Management API

Testing EntitlementTypeAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package entitlementtype

import (
	"context"
	openapiclient "github.com/saviynt/saviynt-api-go-client/entitlementtype"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_entitlementtype_EntitlementTypeAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test EntitlementTypeAPIService CreateEntitlementType", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.EntitlementTypeAPI.CreateEntitlementType(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EntitlementTypeAPIService GetEntitlementType", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.EntitlementTypeAPI.GetEntitlementType(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EntitlementTypeAPIService UpdateEntitlementType", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.EntitlementTypeAPI.UpdateEntitlementType(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
