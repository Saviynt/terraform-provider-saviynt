/*
Entitlement Type Management API

API for managing entitlement types in Saviynt/SSM. - **Create Entitlement Type**: Creates a new entitlement type. - **Update Entitlement Type**: Updates an existing entitlement type. - **Get Entitlement Type List**: Returns a list of entitlement types based on search criteria.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package entitlementtype

import (
	"encoding/json"
)

// checks if the GetEntitlementTypeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEntitlementTypeResponse{}

// GetEntitlementTypeResponse struct for GetEntitlementTypeResponse
type GetEntitlementTypeResponse struct {
	// A message indicating the outcome of the operation.
	Msg *string `json:"msg,omitempty"`
	// An error code where '0' signifies success and '1' signifies an unsuccessful operation.
	ErrorCode *string `json:"errorCode,omitempty"`
	// Total number of records displayed.
	DisplayCount *int32 `json:"displayCount,omitempty"`
	// Total number of records available.
	TotalCount             *int32                                                  `json:"totalCount,omitempty"`
	EntitlementTypeDetails []GetEntitlementTypeResponseEntitlementTypeDetailsInner `json:"entitlementTypeDetails,omitempty"`
}

// NewGetEntitlementTypeResponse instantiates a new GetEntitlementTypeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEntitlementTypeResponse() *GetEntitlementTypeResponse {
	this := GetEntitlementTypeResponse{}
	return &this
}

// NewGetEntitlementTypeResponseWithDefaults instantiates a new GetEntitlementTypeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEntitlementTypeResponseWithDefaults() *GetEntitlementTypeResponse {
	this := GetEntitlementTypeResponse{}
	return &this
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *GetEntitlementTypeResponse) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementTypeResponse) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *GetEntitlementTypeResponse) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *GetEntitlementTypeResponse) SetMsg(v string) {
	o.Msg = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *GetEntitlementTypeResponse) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementTypeResponse) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *GetEntitlementTypeResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *GetEntitlementTypeResponse) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetDisplayCount returns the DisplayCount field value if set, zero value otherwise.
func (o *GetEntitlementTypeResponse) GetDisplayCount() int32 {
	if o == nil || IsNil(o.DisplayCount) {
		var ret int32
		return ret
	}
	return *o.DisplayCount
}

// GetDisplayCountOk returns a tuple with the DisplayCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementTypeResponse) GetDisplayCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DisplayCount) {
		return nil, false
	}
	return o.DisplayCount, true
}

// HasDisplayCount returns a boolean if a field has been set.
func (o *GetEntitlementTypeResponse) HasDisplayCount() bool {
	if o != nil && !IsNil(o.DisplayCount) {
		return true
	}

	return false
}

// SetDisplayCount gets a reference to the given int32 and assigns it to the DisplayCount field.
func (o *GetEntitlementTypeResponse) SetDisplayCount(v int32) {
	o.DisplayCount = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *GetEntitlementTypeResponse) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementTypeResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *GetEntitlementTypeResponse) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *GetEntitlementTypeResponse) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetEntitlementTypeDetails returns the EntitlementTypeDetails field value if set, zero value otherwise.
func (o *GetEntitlementTypeResponse) GetEntitlementTypeDetails() []GetEntitlementTypeResponseEntitlementTypeDetailsInner {
	if o == nil || IsNil(o.EntitlementTypeDetails) {
		var ret []GetEntitlementTypeResponseEntitlementTypeDetailsInner
		return ret
	}
	return o.EntitlementTypeDetails
}

// GetEntitlementTypeDetailsOk returns a tuple with the EntitlementTypeDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementTypeResponse) GetEntitlementTypeDetailsOk() ([]GetEntitlementTypeResponseEntitlementTypeDetailsInner, bool) {
	if o == nil || IsNil(o.EntitlementTypeDetails) {
		return nil, false
	}
	return o.EntitlementTypeDetails, true
}

// HasEntitlementTypeDetails returns a boolean if a field has been set.
func (o *GetEntitlementTypeResponse) HasEntitlementTypeDetails() bool {
	if o != nil && !IsNil(o.EntitlementTypeDetails) {
		return true
	}

	return false
}

// SetEntitlementTypeDetails gets a reference to the given []GetEntitlementTypeResponseEntitlementTypeDetailsInner and assigns it to the EntitlementTypeDetails field.
func (o *GetEntitlementTypeResponse) SetEntitlementTypeDetails(v []GetEntitlementTypeResponseEntitlementTypeDetailsInner) {
	o.EntitlementTypeDetails = v
}

func (o GetEntitlementTypeResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEntitlementTypeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.DisplayCount) {
		toSerialize["displayCount"] = o.DisplayCount
	}
	if !IsNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	if !IsNil(o.EntitlementTypeDetails) {
		toSerialize["entitlementTypeDetails"] = o.EntitlementTypeDetails
	}
	return toSerialize, nil
}

type NullableGetEntitlementTypeResponse struct {
	value *GetEntitlementTypeResponse
	isSet bool
}

func (v NullableGetEntitlementTypeResponse) Get() *GetEntitlementTypeResponse {
	return v.value
}

func (v *NullableGetEntitlementTypeResponse) Set(val *GetEntitlementTypeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEntitlementTypeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEntitlementTypeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEntitlementTypeResponse(val *GetEntitlementTypeResponse) *NullableGetEntitlementTypeResponse {
	return &NullableGetEntitlementTypeResponse{value: val, isSet: true}
}

func (v NullableGetEntitlementTypeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEntitlementTypeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
