/*
Entitlement Management API

API for managing entitlements in Saviynt/SSM. - **Create Entitlement**: Creates a new entitlement. - **Update Entitlement**: Updates an existing entitlement. - **Get Entitlement List**: Returns a list of entitlement based on search criteria. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package entitlements

import (
	"encoding/json"
)

// checks if the GetEntitlementRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEntitlementRequest{}

// GetEntitlementRequest struct for GetEntitlementRequest
type GetEntitlementRequest struct {
	// Username to filter entitlements
	Username *string `json:"username,omitempty"`
	// Type of entitlement to filter
	Entitlementtype *string `json:"entitlementtype,omitempty"`
	// Entitlement value
	EntitlementValue *string `json:"entitlement_value,omitempty"`
	// Name of the endpoint to filter entitlements
	Endpoint *string `json:"endpoint,omitempty"`
	// Type of object requested
	RequestedObject *string `json:"requestedObject,omitempty"`
	// Maximum number of results to return
	Max *int32 `json:"max,omitempty"`
	// Number of results to skip
	Offset *int32 `json:"offset,omitempty"`
	// Comma-separated list of entitlement fields to return
	EntitlementResponseFields *string `json:"entitlementResponseFields,omitempty"`
	// Comma-separated list of user fields to return
	UserResponseFields *string `json:"userResponseFields,omitempty"`
	// Filter criteria for users
	Userfiltercriteria *string `json:"userfiltercriteria,omitempty"`
	// Account name to filter by
	Accountname *string `json:"accountname,omitempty"`
	// If \"true\", returns the list of owners with owner rank for every entitlementValue
	Entownerwithrank *string `json:"entownerwithrank,omitempty"`
	// If true, entitlementmap details will be returned (default is false)
	Returnentitlementmap *string `json:"returnentitlementmap,omitempty"`
	// Default is true. If given as false, it will search based on similar matches
	Exactmatch *string `json:"exactmatch,omitempty"`
	// Filter criteria for entitlements
	Entitlementfiltercriteria *string `json:"entitlementfiltercriteria,omitempty"`
	// Query to support only entitlement_values parameters. Sample - \"ent.description = 'Desc' or ent.displayname like '%display%'\"
	EntQuery *string `json:"entQuery,omitempty"`
}

// NewGetEntitlementRequest instantiates a new GetEntitlementRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEntitlementRequest() *GetEntitlementRequest {
	this := GetEntitlementRequest{}
	return &this
}

// NewGetEntitlementRequestWithDefaults instantiates a new GetEntitlementRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEntitlementRequestWithDefaults() *GetEntitlementRequest {
	this := GetEntitlementRequest{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *GetEntitlementRequest) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementRequest) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *GetEntitlementRequest) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *GetEntitlementRequest) SetUsername(v string) {
	o.Username = &v
}

// GetEntitlementtype returns the Entitlementtype field value if set, zero value otherwise.
func (o *GetEntitlementRequest) GetEntitlementtype() string {
	if o == nil || IsNil(o.Entitlementtype) {
		var ret string
		return ret
	}
	return *o.Entitlementtype
}

// GetEntitlementtypeOk returns a tuple with the Entitlementtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementRequest) GetEntitlementtypeOk() (*string, bool) {
	if o == nil || IsNil(o.Entitlementtype) {
		return nil, false
	}
	return o.Entitlementtype, true
}

// HasEntitlementtype returns a boolean if a field has been set.
func (o *GetEntitlementRequest) HasEntitlementtype() bool {
	if o != nil && !IsNil(o.Entitlementtype) {
		return true
	}

	return false
}

// SetEntitlementtype gets a reference to the given string and assigns it to the Entitlementtype field.
func (o *GetEntitlementRequest) SetEntitlementtype(v string) {
	o.Entitlementtype = &v
}

// GetEntitlementValue returns the EntitlementValue field value if set, zero value otherwise.
func (o *GetEntitlementRequest) GetEntitlementValue() string {
	if o == nil || IsNil(o.EntitlementValue) {
		var ret string
		return ret
	}
	return *o.EntitlementValue
}

// GetEntitlementValueOk returns a tuple with the EntitlementValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementRequest) GetEntitlementValueOk() (*string, bool) {
	if o == nil || IsNil(o.EntitlementValue) {
		return nil, false
	}
	return o.EntitlementValue, true
}

// HasEntitlementValue returns a boolean if a field has been set.
func (o *GetEntitlementRequest) HasEntitlementValue() bool {
	if o != nil && !IsNil(o.EntitlementValue) {
		return true
	}

	return false
}

// SetEntitlementValue gets a reference to the given string and assigns it to the EntitlementValue field.
func (o *GetEntitlementRequest) SetEntitlementValue(v string) {
	o.EntitlementValue = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *GetEntitlementRequest) GetEndpoint() string {
	if o == nil || IsNil(o.Endpoint) {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementRequest) GetEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *GetEntitlementRequest) HasEndpoint() bool {
	if o != nil && !IsNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *GetEntitlementRequest) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetRequestedObject returns the RequestedObject field value if set, zero value otherwise.
func (o *GetEntitlementRequest) GetRequestedObject() string {
	if o == nil || IsNil(o.RequestedObject) {
		var ret string
		return ret
	}
	return *o.RequestedObject
}

// GetRequestedObjectOk returns a tuple with the RequestedObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementRequest) GetRequestedObjectOk() (*string, bool) {
	if o == nil || IsNil(o.RequestedObject) {
		return nil, false
	}
	return o.RequestedObject, true
}

// HasRequestedObject returns a boolean if a field has been set.
func (o *GetEntitlementRequest) HasRequestedObject() bool {
	if o != nil && !IsNil(o.RequestedObject) {
		return true
	}

	return false
}

// SetRequestedObject gets a reference to the given string and assigns it to the RequestedObject field.
func (o *GetEntitlementRequest) SetRequestedObject(v string) {
	o.RequestedObject = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *GetEntitlementRequest) GetMax() int32 {
	if o == nil || IsNil(o.Max) {
		var ret int32
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementRequest) GetMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *GetEntitlementRequest) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given int32 and assigns it to the Max field.
func (o *GetEntitlementRequest) SetMax(v int32) {
	o.Max = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *GetEntitlementRequest) GetOffset() int32 {
	if o == nil || IsNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementRequest) GetOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *GetEntitlementRequest) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *GetEntitlementRequest) SetOffset(v int32) {
	o.Offset = &v
}

// GetEntitlementResponseFields returns the EntitlementResponseFields field value if set, zero value otherwise.
func (o *GetEntitlementRequest) GetEntitlementResponseFields() string {
	if o == nil || IsNil(o.EntitlementResponseFields) {
		var ret string
		return ret
	}
	return *o.EntitlementResponseFields
}

// GetEntitlementResponseFieldsOk returns a tuple with the EntitlementResponseFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementRequest) GetEntitlementResponseFieldsOk() (*string, bool) {
	if o == nil || IsNil(o.EntitlementResponseFields) {
		return nil, false
	}
	return o.EntitlementResponseFields, true
}

// HasEntitlementResponseFields returns a boolean if a field has been set.
func (o *GetEntitlementRequest) HasEntitlementResponseFields() bool {
	if o != nil && !IsNil(o.EntitlementResponseFields) {
		return true
	}

	return false
}

// SetEntitlementResponseFields gets a reference to the given string and assigns it to the EntitlementResponseFields field.
func (o *GetEntitlementRequest) SetEntitlementResponseFields(v string) {
	o.EntitlementResponseFields = &v
}

// GetUserResponseFields returns the UserResponseFields field value if set, zero value otherwise.
func (o *GetEntitlementRequest) GetUserResponseFields() string {
	if o == nil || IsNil(o.UserResponseFields) {
		var ret string
		return ret
	}
	return *o.UserResponseFields
}

// GetUserResponseFieldsOk returns a tuple with the UserResponseFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementRequest) GetUserResponseFieldsOk() (*string, bool) {
	if o == nil || IsNil(o.UserResponseFields) {
		return nil, false
	}
	return o.UserResponseFields, true
}

// HasUserResponseFields returns a boolean if a field has been set.
func (o *GetEntitlementRequest) HasUserResponseFields() bool {
	if o != nil && !IsNil(o.UserResponseFields) {
		return true
	}

	return false
}

// SetUserResponseFields gets a reference to the given string and assigns it to the UserResponseFields field.
func (o *GetEntitlementRequest) SetUserResponseFields(v string) {
	o.UserResponseFields = &v
}

// GetUserfiltercriteria returns the Userfiltercriteria field value if set, zero value otherwise.
func (o *GetEntitlementRequest) GetUserfiltercriteria() string {
	if o == nil || IsNil(o.Userfiltercriteria) {
		var ret string
		return ret
	}
	return *o.Userfiltercriteria
}

// GetUserfiltercriteriaOk returns a tuple with the Userfiltercriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementRequest) GetUserfiltercriteriaOk() (*string, bool) {
	if o == nil || IsNil(o.Userfiltercriteria) {
		return nil, false
	}
	return o.Userfiltercriteria, true
}

// HasUserfiltercriteria returns a boolean if a field has been set.
func (o *GetEntitlementRequest) HasUserfiltercriteria() bool {
	if o != nil && !IsNil(o.Userfiltercriteria) {
		return true
	}

	return false
}

// SetUserfiltercriteria gets a reference to the given string and assigns it to the Userfiltercriteria field.
func (o *GetEntitlementRequest) SetUserfiltercriteria(v string) {
	o.Userfiltercriteria = &v
}

// GetAccountname returns the Accountname field value if set, zero value otherwise.
func (o *GetEntitlementRequest) GetAccountname() string {
	if o == nil || IsNil(o.Accountname) {
		var ret string
		return ret
	}
	return *o.Accountname
}

// GetAccountnameOk returns a tuple with the Accountname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementRequest) GetAccountnameOk() (*string, bool) {
	if o == nil || IsNil(o.Accountname) {
		return nil, false
	}
	return o.Accountname, true
}

// HasAccountname returns a boolean if a field has been set.
func (o *GetEntitlementRequest) HasAccountname() bool {
	if o != nil && !IsNil(o.Accountname) {
		return true
	}

	return false
}

// SetAccountname gets a reference to the given string and assigns it to the Accountname field.
func (o *GetEntitlementRequest) SetAccountname(v string) {
	o.Accountname = &v
}

// GetEntownerwithrank returns the Entownerwithrank field value if set, zero value otherwise.
func (o *GetEntitlementRequest) GetEntownerwithrank() string {
	if o == nil || IsNil(o.Entownerwithrank) {
		var ret string
		return ret
	}
	return *o.Entownerwithrank
}

// GetEntownerwithrankOk returns a tuple with the Entownerwithrank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementRequest) GetEntownerwithrankOk() (*string, bool) {
	if o == nil || IsNil(o.Entownerwithrank) {
		return nil, false
	}
	return o.Entownerwithrank, true
}

// HasEntownerwithrank returns a boolean if a field has been set.
func (o *GetEntitlementRequest) HasEntownerwithrank() bool {
	if o != nil && !IsNil(o.Entownerwithrank) {
		return true
	}

	return false
}

// SetEntownerwithrank gets a reference to the given string and assigns it to the Entownerwithrank field.
func (o *GetEntitlementRequest) SetEntownerwithrank(v string) {
	o.Entownerwithrank = &v
}

// GetReturnentitlementmap returns the Returnentitlementmap field value if set, zero value otherwise.
func (o *GetEntitlementRequest) GetReturnentitlementmap() string {
	if o == nil || IsNil(o.Returnentitlementmap) {
		var ret string
		return ret
	}
	return *o.Returnentitlementmap
}

// GetReturnentitlementmapOk returns a tuple with the Returnentitlementmap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementRequest) GetReturnentitlementmapOk() (*string, bool) {
	if o == nil || IsNil(o.Returnentitlementmap) {
		return nil, false
	}
	return o.Returnentitlementmap, true
}

// HasReturnentitlementmap returns a boolean if a field has been set.
func (o *GetEntitlementRequest) HasReturnentitlementmap() bool {
	if o != nil && !IsNil(o.Returnentitlementmap) {
		return true
	}

	return false
}

// SetReturnentitlementmap gets a reference to the given string and assigns it to the Returnentitlementmap field.
func (o *GetEntitlementRequest) SetReturnentitlementmap(v string) {
	o.Returnentitlementmap = &v
}

// GetExactmatch returns the Exactmatch field value if set, zero value otherwise.
func (o *GetEntitlementRequest) GetExactmatch() string {
	if o == nil || IsNil(o.Exactmatch) {
		var ret string
		return ret
	}
	return *o.Exactmatch
}

// GetExactmatchOk returns a tuple with the Exactmatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementRequest) GetExactmatchOk() (*string, bool) {
	if o == nil || IsNil(o.Exactmatch) {
		return nil, false
	}
	return o.Exactmatch, true
}

// HasExactmatch returns a boolean if a field has been set.
func (o *GetEntitlementRequest) HasExactmatch() bool {
	if o != nil && !IsNil(o.Exactmatch) {
		return true
	}

	return false
}

// SetExactmatch gets a reference to the given string and assigns it to the Exactmatch field.
func (o *GetEntitlementRequest) SetExactmatch(v string) {
	o.Exactmatch = &v
}

// GetEntitlementfiltercriteria returns the Entitlementfiltercriteria field value if set, zero value otherwise.
func (o *GetEntitlementRequest) GetEntitlementfiltercriteria() string {
	if o == nil || IsNil(o.Entitlementfiltercriteria) {
		var ret string
		return ret
	}
	return *o.Entitlementfiltercriteria
}

// GetEntitlementfiltercriteriaOk returns a tuple with the Entitlementfiltercriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementRequest) GetEntitlementfiltercriteriaOk() (*string, bool) {
	if o == nil || IsNil(o.Entitlementfiltercriteria) {
		return nil, false
	}
	return o.Entitlementfiltercriteria, true
}

// HasEntitlementfiltercriteria returns a boolean if a field has been set.
func (o *GetEntitlementRequest) HasEntitlementfiltercriteria() bool {
	if o != nil && !IsNil(o.Entitlementfiltercriteria) {
		return true
	}

	return false
}

// SetEntitlementfiltercriteria gets a reference to the given string and assigns it to the Entitlementfiltercriteria field.
func (o *GetEntitlementRequest) SetEntitlementfiltercriteria(v string) {
	o.Entitlementfiltercriteria = &v
}

// GetEntQuery returns the EntQuery field value if set, zero value otherwise.
func (o *GetEntitlementRequest) GetEntQuery() string {
	if o == nil || IsNil(o.EntQuery) {
		var ret string
		return ret
	}
	return *o.EntQuery
}

// GetEntQueryOk returns a tuple with the EntQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementRequest) GetEntQueryOk() (*string, bool) {
	if o == nil || IsNil(o.EntQuery) {
		return nil, false
	}
	return o.EntQuery, true
}

// HasEntQuery returns a boolean if a field has been set.
func (o *GetEntitlementRequest) HasEntQuery() bool {
	if o != nil && !IsNil(o.EntQuery) {
		return true
	}

	return false
}

// SetEntQuery gets a reference to the given string and assigns it to the EntQuery field.
func (o *GetEntitlementRequest) SetEntQuery(v string) {
	o.EntQuery = &v
}

func (o GetEntitlementRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEntitlementRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Entitlementtype) {
		toSerialize["entitlementtype"] = o.Entitlementtype
	}
	if !IsNil(o.EntitlementValue) {
		toSerialize["entitlement_value"] = o.EntitlementValue
	}
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	if !IsNil(o.RequestedObject) {
		toSerialize["requestedObject"] = o.RequestedObject
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.EntitlementResponseFields) {
		toSerialize["entitlementResponseFields"] = o.EntitlementResponseFields
	}
	if !IsNil(o.UserResponseFields) {
		toSerialize["userResponseFields"] = o.UserResponseFields
	}
	if !IsNil(o.Userfiltercriteria) {
		toSerialize["userfiltercriteria"] = o.Userfiltercriteria
	}
	if !IsNil(o.Accountname) {
		toSerialize["accountname"] = o.Accountname
	}
	if !IsNil(o.Entownerwithrank) {
		toSerialize["entownerwithrank"] = o.Entownerwithrank
	}
	if !IsNil(o.Returnentitlementmap) {
		toSerialize["returnentitlementmap"] = o.Returnentitlementmap
	}
	if !IsNil(o.Exactmatch) {
		toSerialize["exactmatch"] = o.Exactmatch
	}
	if !IsNil(o.Entitlementfiltercriteria) {
		toSerialize["entitlementfiltercriteria"] = o.Entitlementfiltercriteria
	}
	if !IsNil(o.EntQuery) {
		toSerialize["entQuery"] = o.EntQuery
	}
	return toSerialize, nil
}

type NullableGetEntitlementRequest struct {
	value *GetEntitlementRequest
	isSet bool
}

func (v NullableGetEntitlementRequest) Get() *GetEntitlementRequest {
	return v.value
}

func (v *NullableGetEntitlementRequest) Set(val *GetEntitlementRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEntitlementRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEntitlementRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEntitlementRequest(val *GetEntitlementRequest) *NullableGetEntitlementRequest {
	return &NullableGetEntitlementRequest{value: val, isSet: true}
}

func (v NullableGetEntitlementRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEntitlementRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


