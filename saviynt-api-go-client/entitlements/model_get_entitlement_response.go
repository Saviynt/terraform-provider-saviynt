/*
Entitlement Management API

API for managing entitlements in Saviynt/SSM. - **Create Entitlement**: Creates a new entitlement. - **Update Entitlement**: Updates an existing entitlement. - **Get Entitlement List**: Returns a list of entitlement based on search criteria.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package entitlements

import (
	"encoding/json"
)

// checks if the GetEntitlementResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEntitlementResponse{}

// GetEntitlementResponse struct for GetEntitlementResponse
type GetEntitlementResponse struct {
	// Response message indicating the result of the request.
	Msg *string `json:"msg,omitempty"`
	// Error code (0 for success).
	ErrorCode *string `json:"errorCode,omitempty"`
	// Total number of entitlements in the system.
	TotalEntitlementCount *int32 `json:"totalEntitlementCount,omitempty"`
	// Number of entitlements returned in the response.
	EntitlementsCount *int32 `json:"entitlementsCount,omitempty"`
	// List of entitlements with full metadata.
	Entitlementdetails []GetEntitlementResponseEntitlementdetailsInner `json:"Entitlementdetails,omitempty"`
}

// NewGetEntitlementResponse instantiates a new GetEntitlementResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEntitlementResponse() *GetEntitlementResponse {
	this := GetEntitlementResponse{}
	return &this
}

// NewGetEntitlementResponseWithDefaults instantiates a new GetEntitlementResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEntitlementResponseWithDefaults() *GetEntitlementResponse {
	this := GetEntitlementResponse{}
	return &this
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *GetEntitlementResponse) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementResponse) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *GetEntitlementResponse) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *GetEntitlementResponse) SetMsg(v string) {
	o.Msg = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *GetEntitlementResponse) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementResponse) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *GetEntitlementResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *GetEntitlementResponse) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetTotalEntitlementCount returns the TotalEntitlementCount field value if set, zero value otherwise.
func (o *GetEntitlementResponse) GetTotalEntitlementCount() int32 {
	if o == nil || IsNil(o.TotalEntitlementCount) {
		var ret int32
		return ret
	}
	return *o.TotalEntitlementCount
}

// GetTotalEntitlementCountOk returns a tuple with the TotalEntitlementCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementResponse) GetTotalEntitlementCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalEntitlementCount) {
		return nil, false
	}
	return o.TotalEntitlementCount, true
}

// HasTotalEntitlementCount returns a boolean if a field has been set.
func (o *GetEntitlementResponse) HasTotalEntitlementCount() bool {
	if o != nil && !IsNil(o.TotalEntitlementCount) {
		return true
	}

	return false
}

// SetTotalEntitlementCount gets a reference to the given int32 and assigns it to the TotalEntitlementCount field.
func (o *GetEntitlementResponse) SetTotalEntitlementCount(v int32) {
	o.TotalEntitlementCount = &v
}

// GetEntitlementsCount returns the EntitlementsCount field value if set, zero value otherwise.
func (o *GetEntitlementResponse) GetEntitlementsCount() int32 {
	if o == nil || IsNil(o.EntitlementsCount) {
		var ret int32
		return ret
	}
	return *o.EntitlementsCount
}

// GetEntitlementsCountOk returns a tuple with the EntitlementsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementResponse) GetEntitlementsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.EntitlementsCount) {
		return nil, false
	}
	return o.EntitlementsCount, true
}

// HasEntitlementsCount returns a boolean if a field has been set.
func (o *GetEntitlementResponse) HasEntitlementsCount() bool {
	if o != nil && !IsNil(o.EntitlementsCount) {
		return true
	}

	return false
}

// SetEntitlementsCount gets a reference to the given int32 and assigns it to the EntitlementsCount field.
func (o *GetEntitlementResponse) SetEntitlementsCount(v int32) {
	o.EntitlementsCount = &v
}

// GetEntitlementdetails returns the Entitlementdetails field value if set, zero value otherwise.
func (o *GetEntitlementResponse) GetEntitlementdetails() []GetEntitlementResponseEntitlementdetailsInner {
	if o == nil || IsNil(o.Entitlementdetails) {
		var ret []GetEntitlementResponseEntitlementdetailsInner
		return ret
	}
	return o.Entitlementdetails
}

// GetEntitlementdetailsOk returns a tuple with the Entitlementdetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEntitlementResponse) GetEntitlementdetailsOk() ([]GetEntitlementResponseEntitlementdetailsInner, bool) {
	if o == nil || IsNil(o.Entitlementdetails) {
		return nil, false
	}
	return o.Entitlementdetails, true
}

// HasEntitlementdetails returns a boolean if a field has been set.
func (o *GetEntitlementResponse) HasEntitlementdetails() bool {
	if o != nil && !IsNil(o.Entitlementdetails) {
		return true
	}

	return false
}

// SetEntitlementdetails gets a reference to the given []GetEntitlementResponseEntitlementdetailsInner and assigns it to the Entitlementdetails field.
func (o *GetEntitlementResponse) SetEntitlementdetails(v []GetEntitlementResponseEntitlementdetailsInner) {
	o.Entitlementdetails = v
}

func (o GetEntitlementResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEntitlementResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.TotalEntitlementCount) {
		toSerialize["totalEntitlementCount"] = o.TotalEntitlementCount
	}
	if !IsNil(o.EntitlementsCount) {
		toSerialize["entitlementsCount"] = o.EntitlementsCount
	}
	if !IsNil(o.Entitlementdetails) {
		toSerialize["Entitlementdetails"] = o.Entitlementdetails
	}
	return toSerialize, nil
}

type NullableGetEntitlementResponse struct {
	value *GetEntitlementResponse
	isSet bool
}

func (v NullableGetEntitlementResponse) Get() *GetEntitlementResponse {
	return v.value
}

func (v *NullableGetEntitlementResponse) Set(val *GetEntitlementResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEntitlementResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEntitlementResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEntitlementResponse(val *GetEntitlementResponse) *NullableGetEntitlementResponse {
	return &NullableGetEntitlementResponse{value: val, isSet: true}
}

func (v NullableGetEntitlementResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEntitlementResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
