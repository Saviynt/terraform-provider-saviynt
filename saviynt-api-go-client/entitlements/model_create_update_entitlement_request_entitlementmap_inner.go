/*
Entitlement Management API

API for managing entitlements in Saviynt/SSM. - **Create Entitlement**: Creates a new entitlement. - **Update Entitlement**: Updates an existing entitlement. - **Get Entitlement List**: Returns a list of entitlement based on search criteria. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package entitlements

import (
	"encoding/json"
)

// checks if the CreateUpdateEntitlementRequestEntitlementmapInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUpdateEntitlementRequestEntitlementmapInner{}

// CreateUpdateEntitlementRequestEntitlementmapInner struct for CreateUpdateEntitlementRequestEntitlementmapInner
type CreateUpdateEntitlementRequestEntitlementmapInner struct {
	// Value of the entitlement
	Entitlementvalue *string `json:"entitlementvalue,omitempty"`
	// Type of the entitlement
	Entitlementtype *string `json:"entitlementtype,omitempty"`
	// Endpoint name
	Endpoint *string `json:"endpoint,omitempty"`
	// Request filter flag
	Requestfilter *bool `json:"requestfilter,omitempty"`
	// Exclude entitlement flag
	Excludeentitlement *string `json:"excludeentitlement,omitempty"`
	// Add dependent task flag
	Adddependenttask *string `json:"adddependenttask,omitempty"`
	// Remove dependent entitlement task flag
	Removedependententtask *string `json:"removedependententtask,omitempty"`
	// Update type (ADD, REMOVE, etc.)
	UpdateType *string `json:"updateType,omitempty"`
}

// NewCreateUpdateEntitlementRequestEntitlementmapInner instantiates a new CreateUpdateEntitlementRequestEntitlementmapInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUpdateEntitlementRequestEntitlementmapInner() *CreateUpdateEntitlementRequestEntitlementmapInner {
	this := CreateUpdateEntitlementRequestEntitlementmapInner{}
	return &this
}

// NewCreateUpdateEntitlementRequestEntitlementmapInnerWithDefaults instantiates a new CreateUpdateEntitlementRequestEntitlementmapInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUpdateEntitlementRequestEntitlementmapInnerWithDefaults() *CreateUpdateEntitlementRequestEntitlementmapInner {
	this := CreateUpdateEntitlementRequestEntitlementmapInner{}
	return &this
}

// GetEntitlementvalue returns the Entitlementvalue field value if set, zero value otherwise.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) GetEntitlementvalue() string {
	if o == nil || IsNil(o.Entitlementvalue) {
		var ret string
		return ret
	}
	return *o.Entitlementvalue
}

// GetEntitlementvalueOk returns a tuple with the Entitlementvalue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) GetEntitlementvalueOk() (*string, bool) {
	if o == nil || IsNil(o.Entitlementvalue) {
		return nil, false
	}
	return o.Entitlementvalue, true
}

// HasEntitlementvalue returns a boolean if a field has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) HasEntitlementvalue() bool {
	if o != nil && !IsNil(o.Entitlementvalue) {
		return true
	}

	return false
}

// SetEntitlementvalue gets a reference to the given string and assigns it to the Entitlementvalue field.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) SetEntitlementvalue(v string) {
	o.Entitlementvalue = &v
}

// GetEntitlementtype returns the Entitlementtype field value if set, zero value otherwise.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) GetEntitlementtype() string {
	if o == nil || IsNil(o.Entitlementtype) {
		var ret string
		return ret
	}
	return *o.Entitlementtype
}

// GetEntitlementtypeOk returns a tuple with the Entitlementtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) GetEntitlementtypeOk() (*string, bool) {
	if o == nil || IsNil(o.Entitlementtype) {
		return nil, false
	}
	return o.Entitlementtype, true
}

// HasEntitlementtype returns a boolean if a field has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) HasEntitlementtype() bool {
	if o != nil && !IsNil(o.Entitlementtype) {
		return true
	}

	return false
}

// SetEntitlementtype gets a reference to the given string and assigns it to the Entitlementtype field.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) SetEntitlementtype(v string) {
	o.Entitlementtype = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) GetEndpoint() string {
	if o == nil || IsNil(o.Endpoint) {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) GetEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) HasEndpoint() bool {
	if o != nil && !IsNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetRequestfilter returns the Requestfilter field value if set, zero value otherwise.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) GetRequestfilter() bool {
	if o == nil || IsNil(o.Requestfilter) {
		var ret bool
		return ret
	}
	return *o.Requestfilter
}

// GetRequestfilterOk returns a tuple with the Requestfilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) GetRequestfilterOk() (*bool, bool) {
	if o == nil || IsNil(o.Requestfilter) {
		return nil, false
	}
	return o.Requestfilter, true
}

// HasRequestfilter returns a boolean if a field has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) HasRequestfilter() bool {
	if o != nil && !IsNil(o.Requestfilter) {
		return true
	}

	return false
}

// SetRequestfilter gets a reference to the given bool and assigns it to the Requestfilter field.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) SetRequestfilter(v bool) {
	o.Requestfilter = &v
}

// GetExcludeentitlement returns the Excludeentitlement field value if set, zero value otherwise.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) GetExcludeentitlement() string {
	if o == nil || IsNil(o.Excludeentitlement) {
		var ret string
		return ret
	}
	return *o.Excludeentitlement
}

// GetExcludeentitlementOk returns a tuple with the Excludeentitlement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) GetExcludeentitlementOk() (*string, bool) {
	if o == nil || IsNil(o.Excludeentitlement) {
		return nil, false
	}
	return o.Excludeentitlement, true
}

// HasExcludeentitlement returns a boolean if a field has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) HasExcludeentitlement() bool {
	if o != nil && !IsNil(o.Excludeentitlement) {
		return true
	}

	return false
}

// SetExcludeentitlement gets a reference to the given string and assigns it to the Excludeentitlement field.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) SetExcludeentitlement(v string) {
	o.Excludeentitlement = &v
}

// GetAdddependenttask returns the Adddependenttask field value if set, zero value otherwise.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) GetAdddependenttask() string {
	if o == nil || IsNil(o.Adddependenttask) {
		var ret string
		return ret
	}
	return *o.Adddependenttask
}

// GetAdddependenttaskOk returns a tuple with the Adddependenttask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) GetAdddependenttaskOk() (*string, bool) {
	if o == nil || IsNil(o.Adddependenttask) {
		return nil, false
	}
	return o.Adddependenttask, true
}

// HasAdddependenttask returns a boolean if a field has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) HasAdddependenttask() bool {
	if o != nil && !IsNil(o.Adddependenttask) {
		return true
	}

	return false
}

// SetAdddependenttask gets a reference to the given string and assigns it to the Adddependenttask field.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) SetAdddependenttask(v string) {
	o.Adddependenttask = &v
}

// GetRemovedependententtask returns the Removedependententtask field value if set, zero value otherwise.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) GetRemovedependententtask() string {
	if o == nil || IsNil(o.Removedependententtask) {
		var ret string
		return ret
	}
	return *o.Removedependententtask
}

// GetRemovedependententtaskOk returns a tuple with the Removedependententtask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) GetRemovedependententtaskOk() (*string, bool) {
	if o == nil || IsNil(o.Removedependententtask) {
		return nil, false
	}
	return o.Removedependententtask, true
}

// HasRemovedependententtask returns a boolean if a field has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) HasRemovedependententtask() bool {
	if o != nil && !IsNil(o.Removedependententtask) {
		return true
	}

	return false
}

// SetRemovedependententtask gets a reference to the given string and assigns it to the Removedependententtask field.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) SetRemovedependententtask(v string) {
	o.Removedependententtask = &v
}

// GetUpdateType returns the UpdateType field value if set, zero value otherwise.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) GetUpdateType() string {
	if o == nil || IsNil(o.UpdateType) {
		var ret string
		return ret
	}
	return *o.UpdateType
}

// GetUpdateTypeOk returns a tuple with the UpdateType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) GetUpdateTypeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateType) {
		return nil, false
	}
	return o.UpdateType, true
}

// HasUpdateType returns a boolean if a field has been set.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) HasUpdateType() bool {
	if o != nil && !IsNil(o.UpdateType) {
		return true
	}

	return false
}

// SetUpdateType gets a reference to the given string and assigns it to the UpdateType field.
func (o *CreateUpdateEntitlementRequestEntitlementmapInner) SetUpdateType(v string) {
	o.UpdateType = &v
}

func (o CreateUpdateEntitlementRequestEntitlementmapInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUpdateEntitlementRequestEntitlementmapInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Entitlementvalue) {
		toSerialize["entitlementvalue"] = o.Entitlementvalue
	}
	if !IsNil(o.Entitlementtype) {
		toSerialize["entitlementtype"] = o.Entitlementtype
	}
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	if !IsNil(o.Requestfilter) {
		toSerialize["requestfilter"] = o.Requestfilter
	}
	if !IsNil(o.Excludeentitlement) {
		toSerialize["excludeentitlement"] = o.Excludeentitlement
	}
	if !IsNil(o.Adddependenttask) {
		toSerialize["adddependenttask"] = o.Adddependenttask
	}
	if !IsNil(o.Removedependententtask) {
		toSerialize["removedependententtask"] = o.Removedependententtask
	}
	if !IsNil(o.UpdateType) {
		toSerialize["updateType"] = o.UpdateType
	}
	return toSerialize, nil
}

type NullableCreateUpdateEntitlementRequestEntitlementmapInner struct {
	value *CreateUpdateEntitlementRequestEntitlementmapInner
	isSet bool
}

func (v NullableCreateUpdateEntitlementRequestEntitlementmapInner) Get() *CreateUpdateEntitlementRequestEntitlementmapInner {
	return v.value
}

func (v *NullableCreateUpdateEntitlementRequestEntitlementmapInner) Set(val *CreateUpdateEntitlementRequestEntitlementmapInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUpdateEntitlementRequestEntitlementmapInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUpdateEntitlementRequestEntitlementmapInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUpdateEntitlementRequestEntitlementmapInner(val *CreateUpdateEntitlementRequestEntitlementmapInner) *NullableCreateUpdateEntitlementRequestEntitlementmapInner {
	return &NullableCreateUpdateEntitlementRequestEntitlementmapInner{value: val, isSet: true}
}

func (v NullableCreateUpdateEntitlementRequestEntitlementmapInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUpdateEntitlementRequestEntitlementmapInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


