/*
Saviynt API

API for managing jobs in Saviynt.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package job_control

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the JobTriggerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobTriggerRequest{}

// JobTriggerRequest struct for JobTriggerRequest
type JobTriggerRequest struct {
	Triggers []JobTriggerItem `json:"triggers"`
}

type _JobTriggerRequest JobTriggerRequest

// NewJobTriggerRequest instantiates a new JobTriggerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobTriggerRequest(triggers []JobTriggerItem) *JobTriggerRequest {
	this := JobTriggerRequest{}
	this.Triggers = triggers
	return &this
}

// NewJobTriggerRequestWithDefaults instantiates a new JobTriggerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobTriggerRequestWithDefaults() *JobTriggerRequest {
	this := JobTriggerRequest{}
	return &this
}

// GetTriggers returns the Triggers field value
func (o *JobTriggerRequest) GetTriggers() []JobTriggerItem {
	if o == nil {
		var ret []JobTriggerItem
		return ret
	}

	return o.Triggers
}

// GetTriggersOk returns a tuple with the Triggers field value
// and a boolean to check if the value has been set.
func (o *JobTriggerRequest) GetTriggersOk() ([]JobTriggerItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Triggers, true
}

// SetTriggers sets field value
func (o *JobTriggerRequest) SetTriggers(v []JobTriggerItem) {
	o.Triggers = v
}

func (o JobTriggerRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobTriggerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["triggers"] = o.Triggers
	return toSerialize, nil
}

func (o *JobTriggerRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"triggers",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varJobTriggerRequest := _JobTriggerRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varJobTriggerRequest)

	if err != nil {
		return err
	}

	*o = JobTriggerRequest(varJobTriggerRequest)

	return err
}

type NullableJobTriggerRequest struct {
	value *JobTriggerRequest
	isSet bool
}

func (v NullableJobTriggerRequest) Get() *JobTriggerRequest {
	return v.value
}

func (v *NullableJobTriggerRequest) Set(val *JobTriggerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableJobTriggerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableJobTriggerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobTriggerRequest(val *JobTriggerRequest) *NullableJobTriggerRequest {
	return &NullableJobTriggerRequest{value: val, isSet: true}
}

func (v NullableJobTriggerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobTriggerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
