/*
Saviynt API

API for managing jobs in Saviynt.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package job_control

import (
	"encoding/json"
)

// checks if the AccountsImportIncrementalJobAllOfValueMap type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountsImportIncrementalJobAllOfValueMap{}

// AccountsImportIncrementalJobAllOfValueMap struct for AccountsImportIncrementalJobAllOfValueMap
type AccountsImportIncrementalJobAllOfValueMap struct {
	CONNECTION *string `json:"CONNECTION,omitempty"`
}

// NewAccountsImportIncrementalJobAllOfValueMap instantiates a new AccountsImportIncrementalJobAllOfValueMap object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountsImportIncrementalJobAllOfValueMap() *AccountsImportIncrementalJobAllOfValueMap {
	this := AccountsImportIncrementalJobAllOfValueMap{}
	return &this
}

// NewAccountsImportIncrementalJobAllOfValueMapWithDefaults instantiates a new AccountsImportIncrementalJobAllOfValueMap object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountsImportIncrementalJobAllOfValueMapWithDefaults() *AccountsImportIncrementalJobAllOfValueMap {
	this := AccountsImportIncrementalJobAllOfValueMap{}
	return &this
}

// GetCONNECTION returns the CONNECTION field value if set, zero value otherwise.
func (o *AccountsImportIncrementalJobAllOfValueMap) GetCONNECTION() string {
	if o == nil || IsNil(o.CONNECTION) {
		var ret string
		return ret
	}
	return *o.CONNECTION
}

// GetCONNECTIONOk returns a tuple with the CONNECTION field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountsImportIncrementalJobAllOfValueMap) GetCONNECTIONOk() (*string, bool) {
	if o == nil || IsNil(o.CONNECTION) {
		return nil, false
	}
	return o.CONNECTION, true
}

// HasCONNECTION returns a boolean if a field has been set.
func (o *AccountsImportIncrementalJobAllOfValueMap) HasCONNECTION() bool {
	if o != nil && !IsNil(o.CONNECTION) {
		return true
	}

	return false
}

// SetCONNECTION gets a reference to the given string and assigns it to the CONNECTION field.
func (o *AccountsImportIncrementalJobAllOfValueMap) SetCONNECTION(v string) {
	o.CONNECTION = &v
}

func (o AccountsImportIncrementalJobAllOfValueMap) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountsImportIncrementalJobAllOfValueMap) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CONNECTION) {
		toSerialize["CONNECTION"] = o.CONNECTION
	}
	return toSerialize, nil
}

type NullableAccountsImportIncrementalJobAllOfValueMap struct {
	value *AccountsImportIncrementalJobAllOfValueMap
	isSet bool
}

func (v NullableAccountsImportIncrementalJobAllOfValueMap) Get() *AccountsImportIncrementalJobAllOfValueMap {
	return v.value
}

func (v *NullableAccountsImportIncrementalJobAllOfValueMap) Set(val *AccountsImportIncrementalJobAllOfValueMap) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountsImportIncrementalJobAllOfValueMap) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountsImportIncrementalJobAllOfValueMap) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountsImportIncrementalJobAllOfValueMap(val *AccountsImportIncrementalJobAllOfValueMap) *NullableAccountsImportIncrementalJobAllOfValueMap {
	return &NullableAccountsImportIncrementalJobAllOfValueMap{value: val, isSet: true}
}

func (v NullableAccountsImportIncrementalJobAllOfValueMap) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountsImportIncrementalJobAllOfValueMap) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
