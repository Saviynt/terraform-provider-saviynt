/*
Saviynt API

API for managing jobs in Saviynt.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package job_control

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the RunJobTriggerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunJobTriggerResponse{}

// RunJobTriggerResponse Response for the run job trigger operation
type RunJobTriggerResponse struct {
	// Message indicating the result of the operation
	Msg string `json:"msg"`
	// Error code if the operation failed
	ErrorCode string `json:"errorCode"`
	// Timestamp of when the job was triggered
	Timestamp *string `json:"timestamp,omitempty"`
}

type _RunJobTriggerResponse RunJobTriggerResponse

// NewRunJobTriggerResponse instantiates a new RunJobTriggerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunJobTriggerResponse(msg string, errorCode string) *RunJobTriggerResponse {
	this := RunJobTriggerResponse{}
	this.Msg = msg
	this.ErrorCode = errorCode
	return &this
}

// NewRunJobTriggerResponseWithDefaults instantiates a new RunJobTriggerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunJobTriggerResponseWithDefaults() *RunJobTriggerResponse {
	this := RunJobTriggerResponse{}
	return &this
}

// GetMsg returns the Msg field value
func (o *RunJobTriggerResponse) GetMsg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value
// and a boolean to check if the value has been set.
func (o *RunJobTriggerResponse) GetMsgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Msg, true
}

// SetMsg sets field value
func (o *RunJobTriggerResponse) SetMsg(v string) {
	o.Msg = v
}

// GetErrorCode returns the ErrorCode field value
func (o *RunJobTriggerResponse) GetErrorCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value
// and a boolean to check if the value has been set.
func (o *RunJobTriggerResponse) GetErrorCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorCode, true
}

// SetErrorCode sets field value
func (o *RunJobTriggerResponse) SetErrorCode(v string) {
	o.ErrorCode = v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *RunJobTriggerResponse) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunJobTriggerResponse) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *RunJobTriggerResponse) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *RunJobTriggerResponse) SetTimestamp(v string) {
	o.Timestamp = &v
}

func (o RunJobTriggerResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunJobTriggerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["msg"] = o.Msg
	toSerialize["errorCode"] = o.ErrorCode
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

func (o *RunJobTriggerResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"msg",
		"errorCode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRunJobTriggerResponse := _RunJobTriggerResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRunJobTriggerResponse)

	if err != nil {
		return err
	}

	*o = RunJobTriggerResponse(varRunJobTriggerResponse)

	return err
}

type NullableRunJobTriggerResponse struct {
	value *RunJobTriggerResponse
	isSet bool
}

func (v NullableRunJobTriggerResponse) Get() *RunJobTriggerResponse {
	return v.value
}

func (v *NullableRunJobTriggerResponse) Set(val *RunJobTriggerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRunJobTriggerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRunJobTriggerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunJobTriggerResponse(val *RunJobTriggerResponse) *NullableRunJobTriggerResponse {
	return &NullableRunJobTriggerResponse{value: val, isSet: true}
}

func (v NullableRunJobTriggerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunJobTriggerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
