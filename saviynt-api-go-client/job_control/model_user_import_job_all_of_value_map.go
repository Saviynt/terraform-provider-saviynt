/*
Saviynt API

API for managing jobs in Saviynt.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package job_control

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UserImportJobAllOfValueMap type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserImportJobAllOfValueMap{}

// UserImportJobAllOfValueMap struct for UserImportJobAllOfValueMap
type UserImportJobAllOfValueMap struct {
	Externalconn                       string  `json:"externalconn"`
	Fullorincremental                  *string `json:"fullorincremental,omitempty"`
	UserNotInFeedAction                *string `json:"userNotInFeedAction,omitempty"`
	UserOperationsAllowed              *string `json:"userOperationsAllowed,omitempty"`
	ZeroDayProvisioning                *string `json:"zeroDayProvisioning,omitempty"`
	GenerateSystemUsername             *string `json:"generateSystemUsername,omitempty"`
	GenerateEmail                      *string `json:"generateEmail,omitempty"`
	CheckRules                         *string `json:"checkRules,omitempty"`
	BuildUserMap                       *string `json:"buildUserMap,omitempty"`
	UserThreshold                      *string `json:"userThreshold,omitempty"`
	OnFailure                          *string `json:"onFailure,omitempty"`
	ZeroDayLimit                       *string `json:"zeroDayLimit,omitempty"`
	TermUserLimit                      *string `json:"termUserLimit,omitempty"`
	Importsavconnect                   *string `json:"importsavconnect,omitempty"`
	Exporttosavcloud                   *string `json:"exporttosavcloud,omitempty"`
	UserReconcillationField            *string `json:"userReconcillationField,omitempty"`
	UserDefaultSavRole                 *string `json:"userDefaultSavRole,omitempty"`
	UserStatusConfig                   *string `json:"userStatusConfig,omitempty"`
	EndpointsToAssociateOrphanAccounts *string `json:"endpointsToAssociateOrphanAccounts,omitempty"`
}

type _UserImportJobAllOfValueMap UserImportJobAllOfValueMap

// NewUserImportJobAllOfValueMap instantiates a new UserImportJobAllOfValueMap object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserImportJobAllOfValueMap(externalconn string) *UserImportJobAllOfValueMap {
	this := UserImportJobAllOfValueMap{}
	this.Externalconn = externalconn
	return &this
}

// NewUserImportJobAllOfValueMapWithDefaults instantiates a new UserImportJobAllOfValueMap object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserImportJobAllOfValueMapWithDefaults() *UserImportJobAllOfValueMap {
	this := UserImportJobAllOfValueMap{}
	return &this
}

// GetExternalconn returns the Externalconn field value
func (o *UserImportJobAllOfValueMap) GetExternalconn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Externalconn
}

// GetExternalconnOk returns a tuple with the Externalconn field value
// and a boolean to check if the value has been set.
func (o *UserImportJobAllOfValueMap) GetExternalconnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Externalconn, true
}

// SetExternalconn sets field value
func (o *UserImportJobAllOfValueMap) SetExternalconn(v string) {
	o.Externalconn = v
}

// GetFullorincremental returns the Fullorincremental field value if set, zero value otherwise.
func (o *UserImportJobAllOfValueMap) GetFullorincremental() string {
	if o == nil || IsNil(o.Fullorincremental) {
		var ret string
		return ret
	}
	return *o.Fullorincremental
}

// GetFullorincrementalOk returns a tuple with the Fullorincremental field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserImportJobAllOfValueMap) GetFullorincrementalOk() (*string, bool) {
	if o == nil || IsNil(o.Fullorincremental) {
		return nil, false
	}
	return o.Fullorincremental, true
}

// HasFullorincremental returns a boolean if a field has been set.
func (o *UserImportJobAllOfValueMap) HasFullorincremental() bool {
	if o != nil && !IsNil(o.Fullorincremental) {
		return true
	}

	return false
}

// SetFullorincremental gets a reference to the given string and assigns it to the Fullorincremental field.
func (o *UserImportJobAllOfValueMap) SetFullorincremental(v string) {
	o.Fullorincremental = &v
}

// GetUserNotInFeedAction returns the UserNotInFeedAction field value if set, zero value otherwise.
func (o *UserImportJobAllOfValueMap) GetUserNotInFeedAction() string {
	if o == nil || IsNil(o.UserNotInFeedAction) {
		var ret string
		return ret
	}
	return *o.UserNotInFeedAction
}

// GetUserNotInFeedActionOk returns a tuple with the UserNotInFeedAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserImportJobAllOfValueMap) GetUserNotInFeedActionOk() (*string, bool) {
	if o == nil || IsNil(o.UserNotInFeedAction) {
		return nil, false
	}
	return o.UserNotInFeedAction, true
}

// HasUserNotInFeedAction returns a boolean if a field has been set.
func (o *UserImportJobAllOfValueMap) HasUserNotInFeedAction() bool {
	if o != nil && !IsNil(o.UserNotInFeedAction) {
		return true
	}

	return false
}

// SetUserNotInFeedAction gets a reference to the given string and assigns it to the UserNotInFeedAction field.
func (o *UserImportJobAllOfValueMap) SetUserNotInFeedAction(v string) {
	o.UserNotInFeedAction = &v
}

// GetUserOperationsAllowed returns the UserOperationsAllowed field value if set, zero value otherwise.
func (o *UserImportJobAllOfValueMap) GetUserOperationsAllowed() string {
	if o == nil || IsNil(o.UserOperationsAllowed) {
		var ret string
		return ret
	}
	return *o.UserOperationsAllowed
}

// GetUserOperationsAllowedOk returns a tuple with the UserOperationsAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserImportJobAllOfValueMap) GetUserOperationsAllowedOk() (*string, bool) {
	if o == nil || IsNil(o.UserOperationsAllowed) {
		return nil, false
	}
	return o.UserOperationsAllowed, true
}

// HasUserOperationsAllowed returns a boolean if a field has been set.
func (o *UserImportJobAllOfValueMap) HasUserOperationsAllowed() bool {
	if o != nil && !IsNil(o.UserOperationsAllowed) {
		return true
	}

	return false
}

// SetUserOperationsAllowed gets a reference to the given string and assigns it to the UserOperationsAllowed field.
func (o *UserImportJobAllOfValueMap) SetUserOperationsAllowed(v string) {
	o.UserOperationsAllowed = &v
}

// GetZeroDayProvisioning returns the ZeroDayProvisioning field value if set, zero value otherwise.
func (o *UserImportJobAllOfValueMap) GetZeroDayProvisioning() string {
	if o == nil || IsNil(o.ZeroDayProvisioning) {
		var ret string
		return ret
	}
	return *o.ZeroDayProvisioning
}

// GetZeroDayProvisioningOk returns a tuple with the ZeroDayProvisioning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserImportJobAllOfValueMap) GetZeroDayProvisioningOk() (*string, bool) {
	if o == nil || IsNil(o.ZeroDayProvisioning) {
		return nil, false
	}
	return o.ZeroDayProvisioning, true
}

// HasZeroDayProvisioning returns a boolean if a field has been set.
func (o *UserImportJobAllOfValueMap) HasZeroDayProvisioning() bool {
	if o != nil && !IsNil(o.ZeroDayProvisioning) {
		return true
	}

	return false
}

// SetZeroDayProvisioning gets a reference to the given string and assigns it to the ZeroDayProvisioning field.
func (o *UserImportJobAllOfValueMap) SetZeroDayProvisioning(v string) {
	o.ZeroDayProvisioning = &v
}

// GetGenerateSystemUsername returns the GenerateSystemUsername field value if set, zero value otherwise.
func (o *UserImportJobAllOfValueMap) GetGenerateSystemUsername() string {
	if o == nil || IsNil(o.GenerateSystemUsername) {
		var ret string
		return ret
	}
	return *o.GenerateSystemUsername
}

// GetGenerateSystemUsernameOk returns a tuple with the GenerateSystemUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserImportJobAllOfValueMap) GetGenerateSystemUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.GenerateSystemUsername) {
		return nil, false
	}
	return o.GenerateSystemUsername, true
}

// HasGenerateSystemUsername returns a boolean if a field has been set.
func (o *UserImportJobAllOfValueMap) HasGenerateSystemUsername() bool {
	if o != nil && !IsNil(o.GenerateSystemUsername) {
		return true
	}

	return false
}

// SetGenerateSystemUsername gets a reference to the given string and assigns it to the GenerateSystemUsername field.
func (o *UserImportJobAllOfValueMap) SetGenerateSystemUsername(v string) {
	o.GenerateSystemUsername = &v
}

// GetGenerateEmail returns the GenerateEmail field value if set, zero value otherwise.
func (o *UserImportJobAllOfValueMap) GetGenerateEmail() string {
	if o == nil || IsNil(o.GenerateEmail) {
		var ret string
		return ret
	}
	return *o.GenerateEmail
}

// GetGenerateEmailOk returns a tuple with the GenerateEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserImportJobAllOfValueMap) GetGenerateEmailOk() (*string, bool) {
	if o == nil || IsNil(o.GenerateEmail) {
		return nil, false
	}
	return o.GenerateEmail, true
}

// HasGenerateEmail returns a boolean if a field has been set.
func (o *UserImportJobAllOfValueMap) HasGenerateEmail() bool {
	if o != nil && !IsNil(o.GenerateEmail) {
		return true
	}

	return false
}

// SetGenerateEmail gets a reference to the given string and assigns it to the GenerateEmail field.
func (o *UserImportJobAllOfValueMap) SetGenerateEmail(v string) {
	o.GenerateEmail = &v
}

// GetCheckRules returns the CheckRules field value if set, zero value otherwise.
func (o *UserImportJobAllOfValueMap) GetCheckRules() string {
	if o == nil || IsNil(o.CheckRules) {
		var ret string
		return ret
	}
	return *o.CheckRules
}

// GetCheckRulesOk returns a tuple with the CheckRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserImportJobAllOfValueMap) GetCheckRulesOk() (*string, bool) {
	if o == nil || IsNil(o.CheckRules) {
		return nil, false
	}
	return o.CheckRules, true
}

// HasCheckRules returns a boolean if a field has been set.
func (o *UserImportJobAllOfValueMap) HasCheckRules() bool {
	if o != nil && !IsNil(o.CheckRules) {
		return true
	}

	return false
}

// SetCheckRules gets a reference to the given string and assigns it to the CheckRules field.
func (o *UserImportJobAllOfValueMap) SetCheckRules(v string) {
	o.CheckRules = &v
}

// GetBuildUserMap returns the BuildUserMap field value if set, zero value otherwise.
func (o *UserImportJobAllOfValueMap) GetBuildUserMap() string {
	if o == nil || IsNil(o.BuildUserMap) {
		var ret string
		return ret
	}
	return *o.BuildUserMap
}

// GetBuildUserMapOk returns a tuple with the BuildUserMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserImportJobAllOfValueMap) GetBuildUserMapOk() (*string, bool) {
	if o == nil || IsNil(o.BuildUserMap) {
		return nil, false
	}
	return o.BuildUserMap, true
}

// HasBuildUserMap returns a boolean if a field has been set.
func (o *UserImportJobAllOfValueMap) HasBuildUserMap() bool {
	if o != nil && !IsNil(o.BuildUserMap) {
		return true
	}

	return false
}

// SetBuildUserMap gets a reference to the given string and assigns it to the BuildUserMap field.
func (o *UserImportJobAllOfValueMap) SetBuildUserMap(v string) {
	o.BuildUserMap = &v
}

// GetUserThreshold returns the UserThreshold field value if set, zero value otherwise.
func (o *UserImportJobAllOfValueMap) GetUserThreshold() string {
	if o == nil || IsNil(o.UserThreshold) {
		var ret string
		return ret
	}
	return *o.UserThreshold
}

// GetUserThresholdOk returns a tuple with the UserThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserImportJobAllOfValueMap) GetUserThresholdOk() (*string, bool) {
	if o == nil || IsNil(o.UserThreshold) {
		return nil, false
	}
	return o.UserThreshold, true
}

// HasUserThreshold returns a boolean if a field has been set.
func (o *UserImportJobAllOfValueMap) HasUserThreshold() bool {
	if o != nil && !IsNil(o.UserThreshold) {
		return true
	}

	return false
}

// SetUserThreshold gets a reference to the given string and assigns it to the UserThreshold field.
func (o *UserImportJobAllOfValueMap) SetUserThreshold(v string) {
	o.UserThreshold = &v
}

// GetOnFailure returns the OnFailure field value if set, zero value otherwise.
func (o *UserImportJobAllOfValueMap) GetOnFailure() string {
	if o == nil || IsNil(o.OnFailure) {
		var ret string
		return ret
	}
	return *o.OnFailure
}

// GetOnFailureOk returns a tuple with the OnFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserImportJobAllOfValueMap) GetOnFailureOk() (*string, bool) {
	if o == nil || IsNil(o.OnFailure) {
		return nil, false
	}
	return o.OnFailure, true
}

// HasOnFailure returns a boolean if a field has been set.
func (o *UserImportJobAllOfValueMap) HasOnFailure() bool {
	if o != nil && !IsNil(o.OnFailure) {
		return true
	}

	return false
}

// SetOnFailure gets a reference to the given string and assigns it to the OnFailure field.
func (o *UserImportJobAllOfValueMap) SetOnFailure(v string) {
	o.OnFailure = &v
}

// GetZeroDayLimit returns the ZeroDayLimit field value if set, zero value otherwise.
func (o *UserImportJobAllOfValueMap) GetZeroDayLimit() string {
	if o == nil || IsNil(o.ZeroDayLimit) {
		var ret string
		return ret
	}
	return *o.ZeroDayLimit
}

// GetZeroDayLimitOk returns a tuple with the ZeroDayLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserImportJobAllOfValueMap) GetZeroDayLimitOk() (*string, bool) {
	if o == nil || IsNil(o.ZeroDayLimit) {
		return nil, false
	}
	return o.ZeroDayLimit, true
}

// HasZeroDayLimit returns a boolean if a field has been set.
func (o *UserImportJobAllOfValueMap) HasZeroDayLimit() bool {
	if o != nil && !IsNil(o.ZeroDayLimit) {
		return true
	}

	return false
}

// SetZeroDayLimit gets a reference to the given string and assigns it to the ZeroDayLimit field.
func (o *UserImportJobAllOfValueMap) SetZeroDayLimit(v string) {
	o.ZeroDayLimit = &v
}

// GetTermUserLimit returns the TermUserLimit field value if set, zero value otherwise.
func (o *UserImportJobAllOfValueMap) GetTermUserLimit() string {
	if o == nil || IsNil(o.TermUserLimit) {
		var ret string
		return ret
	}
	return *o.TermUserLimit
}

// GetTermUserLimitOk returns a tuple with the TermUserLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserImportJobAllOfValueMap) GetTermUserLimitOk() (*string, bool) {
	if o == nil || IsNil(o.TermUserLimit) {
		return nil, false
	}
	return o.TermUserLimit, true
}

// HasTermUserLimit returns a boolean if a field has been set.
func (o *UserImportJobAllOfValueMap) HasTermUserLimit() bool {
	if o != nil && !IsNil(o.TermUserLimit) {
		return true
	}

	return false
}

// SetTermUserLimit gets a reference to the given string and assigns it to the TermUserLimit field.
func (o *UserImportJobAllOfValueMap) SetTermUserLimit(v string) {
	o.TermUserLimit = &v
}

// GetImportsavconnect returns the Importsavconnect field value if set, zero value otherwise.
func (o *UserImportJobAllOfValueMap) GetImportsavconnect() string {
	if o == nil || IsNil(o.Importsavconnect) {
		var ret string
		return ret
	}
	return *o.Importsavconnect
}

// GetImportsavconnectOk returns a tuple with the Importsavconnect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserImportJobAllOfValueMap) GetImportsavconnectOk() (*string, bool) {
	if o == nil || IsNil(o.Importsavconnect) {
		return nil, false
	}
	return o.Importsavconnect, true
}

// HasImportsavconnect returns a boolean if a field has been set.
func (o *UserImportJobAllOfValueMap) HasImportsavconnect() bool {
	if o != nil && !IsNil(o.Importsavconnect) {
		return true
	}

	return false
}

// SetImportsavconnect gets a reference to the given string and assigns it to the Importsavconnect field.
func (o *UserImportJobAllOfValueMap) SetImportsavconnect(v string) {
	o.Importsavconnect = &v
}

// GetExporttosavcloud returns the Exporttosavcloud field value if set, zero value otherwise.
func (o *UserImportJobAllOfValueMap) GetExporttosavcloud() string {
	if o == nil || IsNil(o.Exporttosavcloud) {
		var ret string
		return ret
	}
	return *o.Exporttosavcloud
}

// GetExporttosavcloudOk returns a tuple with the Exporttosavcloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserImportJobAllOfValueMap) GetExporttosavcloudOk() (*string, bool) {
	if o == nil || IsNil(o.Exporttosavcloud) {
		return nil, false
	}
	return o.Exporttosavcloud, true
}

// HasExporttosavcloud returns a boolean if a field has been set.
func (o *UserImportJobAllOfValueMap) HasExporttosavcloud() bool {
	if o != nil && !IsNil(o.Exporttosavcloud) {
		return true
	}

	return false
}

// SetExporttosavcloud gets a reference to the given string and assigns it to the Exporttosavcloud field.
func (o *UserImportJobAllOfValueMap) SetExporttosavcloud(v string) {
	o.Exporttosavcloud = &v
}

// GetUserReconcillationField returns the UserReconcillationField field value if set, zero value otherwise.
func (o *UserImportJobAllOfValueMap) GetUserReconcillationField() string {
	if o == nil || IsNil(o.UserReconcillationField) {
		var ret string
		return ret
	}
	return *o.UserReconcillationField
}

// GetUserReconcillationFieldOk returns a tuple with the UserReconcillationField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserImportJobAllOfValueMap) GetUserReconcillationFieldOk() (*string, bool) {
	if o == nil || IsNil(o.UserReconcillationField) {
		return nil, false
	}
	return o.UserReconcillationField, true
}

// HasUserReconcillationField returns a boolean if a field has been set.
func (o *UserImportJobAllOfValueMap) HasUserReconcillationField() bool {
	if o != nil && !IsNil(o.UserReconcillationField) {
		return true
	}

	return false
}

// SetUserReconcillationField gets a reference to the given string and assigns it to the UserReconcillationField field.
func (o *UserImportJobAllOfValueMap) SetUserReconcillationField(v string) {
	o.UserReconcillationField = &v
}

// GetUserDefaultSavRole returns the UserDefaultSavRole field value if set, zero value otherwise.
func (o *UserImportJobAllOfValueMap) GetUserDefaultSavRole() string {
	if o == nil || IsNil(o.UserDefaultSavRole) {
		var ret string
		return ret
	}
	return *o.UserDefaultSavRole
}

// GetUserDefaultSavRoleOk returns a tuple with the UserDefaultSavRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserImportJobAllOfValueMap) GetUserDefaultSavRoleOk() (*string, bool) {
	if o == nil || IsNil(o.UserDefaultSavRole) {
		return nil, false
	}
	return o.UserDefaultSavRole, true
}

// HasUserDefaultSavRole returns a boolean if a field has been set.
func (o *UserImportJobAllOfValueMap) HasUserDefaultSavRole() bool {
	if o != nil && !IsNil(o.UserDefaultSavRole) {
		return true
	}

	return false
}

// SetUserDefaultSavRole gets a reference to the given string and assigns it to the UserDefaultSavRole field.
func (o *UserImportJobAllOfValueMap) SetUserDefaultSavRole(v string) {
	o.UserDefaultSavRole = &v
}

// GetUserStatusConfig returns the UserStatusConfig field value if set, zero value otherwise.
func (o *UserImportJobAllOfValueMap) GetUserStatusConfig() string {
	if o == nil || IsNil(o.UserStatusConfig) {
		var ret string
		return ret
	}
	return *o.UserStatusConfig
}

// GetUserStatusConfigOk returns a tuple with the UserStatusConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserImportJobAllOfValueMap) GetUserStatusConfigOk() (*string, bool) {
	if o == nil || IsNil(o.UserStatusConfig) {
		return nil, false
	}
	return o.UserStatusConfig, true
}

// HasUserStatusConfig returns a boolean if a field has been set.
func (o *UserImportJobAllOfValueMap) HasUserStatusConfig() bool {
	if o != nil && !IsNil(o.UserStatusConfig) {
		return true
	}

	return false
}

// SetUserStatusConfig gets a reference to the given string and assigns it to the UserStatusConfig field.
func (o *UserImportJobAllOfValueMap) SetUserStatusConfig(v string) {
	o.UserStatusConfig = &v
}

// GetEndpointsToAssociateOrphanAccounts returns the EndpointsToAssociateOrphanAccounts field value if set, zero value otherwise.
func (o *UserImportJobAllOfValueMap) GetEndpointsToAssociateOrphanAccounts() string {
	if o == nil || IsNil(o.EndpointsToAssociateOrphanAccounts) {
		var ret string
		return ret
	}
	return *o.EndpointsToAssociateOrphanAccounts
}

// GetEndpointsToAssociateOrphanAccountsOk returns a tuple with the EndpointsToAssociateOrphanAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserImportJobAllOfValueMap) GetEndpointsToAssociateOrphanAccountsOk() (*string, bool) {
	if o == nil || IsNil(o.EndpointsToAssociateOrphanAccounts) {
		return nil, false
	}
	return o.EndpointsToAssociateOrphanAccounts, true
}

// HasEndpointsToAssociateOrphanAccounts returns a boolean if a field has been set.
func (o *UserImportJobAllOfValueMap) HasEndpointsToAssociateOrphanAccounts() bool {
	if o != nil && !IsNil(o.EndpointsToAssociateOrphanAccounts) {
		return true
	}

	return false
}

// SetEndpointsToAssociateOrphanAccounts gets a reference to the given string and assigns it to the EndpointsToAssociateOrphanAccounts field.
func (o *UserImportJobAllOfValueMap) SetEndpointsToAssociateOrphanAccounts(v string) {
	o.EndpointsToAssociateOrphanAccounts = &v
}

func (o UserImportJobAllOfValueMap) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserImportJobAllOfValueMap) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["externalconn"] = o.Externalconn
	if !IsNil(o.Fullorincremental) {
		toSerialize["fullorincremental"] = o.Fullorincremental
	}
	if !IsNil(o.UserNotInFeedAction) {
		toSerialize["userNotInFeedAction"] = o.UserNotInFeedAction
	}
	if !IsNil(o.UserOperationsAllowed) {
		toSerialize["userOperationsAllowed"] = o.UserOperationsAllowed
	}
	if !IsNil(o.ZeroDayProvisioning) {
		toSerialize["zeroDayProvisioning"] = o.ZeroDayProvisioning
	}
	if !IsNil(o.GenerateSystemUsername) {
		toSerialize["generateSystemUsername"] = o.GenerateSystemUsername
	}
	if !IsNil(o.GenerateEmail) {
		toSerialize["generateEmail"] = o.GenerateEmail
	}
	if !IsNil(o.CheckRules) {
		toSerialize["checkRules"] = o.CheckRules
	}
	if !IsNil(o.BuildUserMap) {
		toSerialize["buildUserMap"] = o.BuildUserMap
	}
	if !IsNil(o.UserThreshold) {
		toSerialize["userThreshold"] = o.UserThreshold
	}
	if !IsNil(o.OnFailure) {
		toSerialize["onFailure"] = o.OnFailure
	}
	if !IsNil(o.ZeroDayLimit) {
		toSerialize["zeroDayLimit"] = o.ZeroDayLimit
	}
	if !IsNil(o.TermUserLimit) {
		toSerialize["termUserLimit"] = o.TermUserLimit
	}
	if !IsNil(o.Importsavconnect) {
		toSerialize["importsavconnect"] = o.Importsavconnect
	}
	if !IsNil(o.Exporttosavcloud) {
		toSerialize["exporttosavcloud"] = o.Exporttosavcloud
	}
	if !IsNil(o.UserReconcillationField) {
		toSerialize["userReconcillationField"] = o.UserReconcillationField
	}
	if !IsNil(o.UserDefaultSavRole) {
		toSerialize["userDefaultSavRole"] = o.UserDefaultSavRole
	}
	if !IsNil(o.UserStatusConfig) {
		toSerialize["userStatusConfig"] = o.UserStatusConfig
	}
	if !IsNil(o.EndpointsToAssociateOrphanAccounts) {
		toSerialize["endpointsToAssociateOrphanAccounts"] = o.EndpointsToAssociateOrphanAccounts
	}
	return toSerialize, nil
}

func (o *UserImportJobAllOfValueMap) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"externalconn",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserImportJobAllOfValueMap := _UserImportJobAllOfValueMap{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserImportJobAllOfValueMap)

	if err != nil {
		return err
	}

	*o = UserImportJobAllOfValueMap(varUserImportJobAllOfValueMap)

	return err
}

type NullableUserImportJobAllOfValueMap struct {
	value *UserImportJobAllOfValueMap
	isSet bool
}

func (v NullableUserImportJobAllOfValueMap) Get() *UserImportJobAllOfValueMap {
	return v.value
}

func (v *NullableUserImportJobAllOfValueMap) Set(val *UserImportJobAllOfValueMap) {
	v.value = val
	v.isSet = true
}

func (v NullableUserImportJobAllOfValueMap) IsSet() bool {
	return v.isSet
}

func (v *NullableUserImportJobAllOfValueMap) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserImportJobAllOfValueMap(val *UserImportJobAllOfValueMap) *NullableUserImportJobAllOfValueMap {
	return &NullableUserImportJobAllOfValueMap{value: val, isSet: true}
}

func (v NullableUserImportJobAllOfValueMap) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserImportJobAllOfValueMap) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
