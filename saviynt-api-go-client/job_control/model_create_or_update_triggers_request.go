/*
Saviynt API

API for managing jobs in Saviynt.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package job_control

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateOrUpdateTriggersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrUpdateTriggersRequest{}

// CreateOrUpdateTriggersRequest struct for CreateOrUpdateTriggersRequest
type CreateOrUpdateTriggersRequest struct {
	Triggers []TriggerItem `json:"triggers"`
}

type _CreateOrUpdateTriggersRequest CreateOrUpdateTriggersRequest

// NewCreateOrUpdateTriggersRequest instantiates a new CreateOrUpdateTriggersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrUpdateTriggersRequest(triggers []TriggerItem) *CreateOrUpdateTriggersRequest {
	this := CreateOrUpdateTriggersRequest{}
	this.Triggers = triggers
	return &this
}

// NewCreateOrUpdateTriggersRequestWithDefaults instantiates a new CreateOrUpdateTriggersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrUpdateTriggersRequestWithDefaults() *CreateOrUpdateTriggersRequest {
	this := CreateOrUpdateTriggersRequest{}
	return &this
}

// GetTriggers returns the Triggers field value
func (o *CreateOrUpdateTriggersRequest) GetTriggers() []TriggerItem {
	if o == nil {
		var ret []TriggerItem
		return ret
	}

	return o.Triggers
}

// GetTriggersOk returns a tuple with the Triggers field value
// and a boolean to check if the value has been set.
func (o *CreateOrUpdateTriggersRequest) GetTriggersOk() ([]TriggerItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Triggers, true
}

// SetTriggers sets field value
func (o *CreateOrUpdateTriggersRequest) SetTriggers(v []TriggerItem) {
	o.Triggers = v
}

func (o CreateOrUpdateTriggersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrUpdateTriggersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["triggers"] = o.Triggers
	return toSerialize, nil
}

func (o *CreateOrUpdateTriggersRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"triggers",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrUpdateTriggersRequest := _CreateOrUpdateTriggersRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOrUpdateTriggersRequest)

	if err != nil {
		return err
	}

	*o = CreateOrUpdateTriggersRequest(varCreateOrUpdateTriggersRequest)

	return err
}

type NullableCreateOrUpdateTriggersRequest struct {
	value *CreateOrUpdateTriggersRequest
	isSet bool
}

func (v NullableCreateOrUpdateTriggersRequest) Get() *CreateOrUpdateTriggersRequest {
	return v.value
}

func (v *NullableCreateOrUpdateTriggersRequest) Set(val *CreateOrUpdateTriggersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrUpdateTriggersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrUpdateTriggersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrUpdateTriggersRequest(val *CreateOrUpdateTriggersRequest) *NullableCreateOrUpdateTriggersRequest {
	return &NullableCreateOrUpdateTriggersRequest{value: val, isSet: true}
}

func (v NullableCreateOrUpdateTriggersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrUpdateTriggersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


